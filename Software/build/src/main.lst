   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	can_send_done:
  13               	.LFB22:
  14               		.file 1 "src/main.c"
   1:src/main.c    **** #ifndef F_CPU
   2:src/main.c    **** 	#define F_CPU 16000000
   3:src/main.c    **** #endif
   4:src/main.c    **** 
   5:src/main.c    **** #include <avr/io.h>
   6:src/main.c    **** #include <util/delay.h>
   7:src/main.c    **** #include <avr/interrupt.h>
   8:src/main.c    **** #include <stdlib.h>
   9:src/main.c    **** #include <string.h>
  10:src/main.c    **** #include "system.h"
  11:src/main.c    **** #include "can.h"
  12:src/main.c    **** #include "stepper.h"
  13:src/main.c    **** 
  14:src/main.c    **** canMsg message;
  15:src/main.c    **** canMsg snd_message;
  16:src/main.c    **** 
  17:src/main.c    **** unsigned char dummy_data[8] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
  18:src/main.c    **** unsigned char first_byte, second_byte;
  19:src/main.c    **** 
  20:src/main.c    **** static void can_send_done(void) {
  15               		.loc 1 20 33 view -0
  16               		.cfi_startproc
  17 0000 0F93      		push r16
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 16, -2
  21 0002 1F93      		push r17
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 17, -3
  25 0004 CF93      		push r28
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 5
  28               		.cfi_offset 28, -4
  29 0006 DF93      		push r29
  30               	.LCFI3:
  31               		.cfi_def_cfa_offset 6
  32               		.cfi_offset 29, -5
  33 0008 CDB7      		in r28,__SP_L__
  34 000a DEB7      		in r29,__SP_H__
  35               	.LCFI4:
  36               		.cfi_def_cfa_register 28
  37 000c 2897      		sbiw r28,8
  38               	.LCFI5:
  39               		.cfi_def_cfa_offset 14
  40 000e 0FB6      		in __tmp_reg__,__SREG__
  41 0010 F894      		cli
  42 0012 DEBF      		out __SP_H__,r29
  43 0014 0FBE      		out __SREG__,__tmp_reg__
  44 0016 CDBF      		out __SP_L__,r28
  45               	/* prologue: function */
  46               	/* frame size = 8 */
  47               	/* stack size = 12 */
  48               	.L__stack_usage = 12
  21:src/main.c    **** 	
  22:src/main.c    **** 	unsigned char ready_data[8];
  49               		.loc 1 22 2 view .LVU1
  23:src/main.c    **** 
  24:src/main.c    **** 	ready_data[0] = 1;
  50               		.loc 1 24 2 view .LVU2
  51               	.LVL0:
  25:src/main.c    **** 			 
  26:src/main.c    **** 	memcpy(snd_message.data, ready_data, 8);
  52               		.loc 1 26 2 view .LVU3
  53               		.loc 1 26 2 is_stmt 0 view .LVU4
  54 0018 81E0      		ldi r24,lo8(1)
  55 001a 8983      		std Y+1,r24
  56 001c 88E0      		ldi r24,lo8(8)
  57 001e FE01      		movw r30,r28
  58 0020 3196      		adiw r30,1
  59 0022 A0E0      		ldi r26,lo8(snd_message)
  60 0024 B0E0      		ldi r27,hi8(snd_message)
  61               		0:
  62 0026 0190      		ld r0,Z+
  63 0028 0D92      		st X+,r0
  64 002a 8A95      		dec r24
  65 002c 01F4      		brne 0b
  27:src/main.c    **** 	snd_message.msgIde = MAIN_BOARD_CAN_ID;
  66               		.loc 1 27 2 is_stmt 1 view .LVU5
  67               		.loc 1 27 21 is_stmt 0 view .LVU6
  68 002e 84E0      		ldi r24,lo8(4)
  69 0030 8093 0000 		sts snd_message+8,r24
  70 0034 1092 0000 		sts snd_message+9,__zero_reg__
  28:src/main.c    **** 
  29:src/main.c    **** 	if(CAN_write(snd_message) == 1) {
  71               		.loc 1 29 2 is_stmt 1 view .LVU7
  72               		.loc 1 29 5 is_stmt 0 view .LVU8
  73 0038 0091 0000 		lds r16,snd_message
  74 003c 1091 0000 		lds r17,snd_message+1
  75 0040 2091 0000 		lds r18,snd_message+2
  76 0044 3091 0000 		lds r19,snd_message+3
  77 0048 4091 0000 		lds r20,snd_message+4
  78 004c 5091 0000 		lds r21,snd_message+5
  79 0050 6091 0000 		lds r22,snd_message+6
  80 0054 7091 0000 		lds r23,snd_message+7
  81 0058 90E0      		ldi r25,0
  82 005a 0E94 0000 		call CAN_write
  83               	.LVL1:
  30:src/main.c    **** 		// success
  31:src/main.c    **** 	}
  84               		.loc 1 31 2 is_stmt 1 view .LVU9
  85               	/* epilogue start */
  32:src/main.c    **** } 
  86               		.loc 1 32 1 is_stmt 0 view .LVU10
  87 005e 2896      		adiw r28,8
  88 0060 0FB6      		in __tmp_reg__,__SREG__
  89 0062 F894      		cli
  90 0064 DEBF      		out __SP_H__,r29
  91 0066 0FBE      		out __SREG__,__tmp_reg__
  92 0068 CDBF      		out __SP_L__,r28
  93 006a DF91      		pop r29
  94 006c CF91      		pop r28
  95 006e 1F91      		pop r17
  96 0070 0F91      		pop r16
  97 0072 0895      		ret
  98               		.cfi_endproc
  99               	.LFE22:
 101               		.section	.text.startup,"ax",@progbits
 102               	.global	main
 104               	main:
 105               	.LFB23:
  33:src/main.c    **** 
  34:src/main.c    **** int main(void) {
 106               		.loc 1 34 16 is_stmt 1 view -0
 107               		.cfi_startproc
 108 0000 CDB7      		in r28,__SP_L__
 109 0002 DEB7      		in r29,__SP_H__
 110               	.LCFI6:
 111               		.cfi_def_cfa_register 28
 112 0004 2897      		sbiw r28,8
 113               	.LCFI7:
 114               		.cfi_def_cfa_offset 10
 115 0006 0FB6      		in __tmp_reg__,__SREG__
 116 0008 F894      		cli
 117 000a DEBF      		out __SP_H__,r29
 118 000c 0FBE      		out __SREG__,__tmp_reg__
 119 000e CDBF      		out __SP_L__,r28
 120               	/* prologue: function */
 121               	/* frame size = 8 */
 122               	/* stack size = 8 */
 123               	.L__stack_usage = 8
  35:src/main.c    **** 
  36:src/main.c    **** 	system_init();
 124               		.loc 1 36 2 view .LVU12
 125 0010 0E94 0000 		call system_init
 126               	.LVL2:
 127               	.LBB2:
  37:src/main.c    **** 
  38:src/main.c    **** 	while(1) {
  39:src/main.c    **** 
  40:src/main.c    **** 		if(CAN_checkRX() == 1) {
  41:src/main.c    **** 			CAN_read(&message);
  42:src/main.c    **** 
  43:src/main.c    **** 			first_byte 		= message.data[0];
  44:src/main.c    **** 			second_byte 	= message.data[1];
  45:src/main.c    **** 
  46:src/main.c    **** 			if(first_byte == 'P') {
  47:src/main.c    **** 					
  48:src/main.c    **** 				// SUB-ACTION: LED flash {'P', 0}
  49:src/main.c    **** 				if(second_byte == 0) {
  50:src/main.c    **** 							
  51:src/main.c    **** 					gpio_write_pin(PIN_LED2, true);
  52:src/main.c    **** 					delay(500);
  53:src/main.c    **** 					gpio_write_pin(PIN_LED2, false);
  54:src/main.c    **** 							
  55:src/main.c    **** 				} // end of SUB-ACTION: LED flash
  56:src/main.c    **** 
  57:src/main.c    **** 				// SUB-ACTION: WITH REPLY {'P', 1}
  58:src/main.c    **** 				else if(second_byte == 1) {
  59:src/main.c    **** 
  60:src/main.c    **** 					gpio_write_pin(PIN_LED2, true);
  61:src/main.c    **** 
  62:src/main.c    **** 					memcpy(snd_message.data, dummy_data, 8);
  63:src/main.c    **** 					snd_message.msgIde = MAIN_BOARD_CAN_ID;
  64:src/main.c    **** 
  65:src/main.c    **** 					if(CAN_write(snd_message) == 1) {
  66:src/main.c    **** 						// success
  67:src/main.c    **** 						gpio_write_pin(PIN_LED2, false);
  68:src/main.c    **** 					}
  69:src/main.c    **** 
  70:src/main.c    **** 				} // end of SUB-ACTION: WITH REPLY
  71:src/main.c    **** 			} // end of PING
  72:src/main.c    **** 
  73:src/main.c    **** 			// ACTION: switches {'S'}
  74:src/main.c    **** 			else if(first_byte == 'S') {
  75:src/main.c    **** 				
  76:src/main.c    **** 				unsigned char switch_data[8];
  77:src/main.c    **** 
  78:src/main.c    **** 				switch_data[0] = read_switch((uint8_t)(second_byte));
  79:src/main.c    **** 				
  80:src/main.c    **** 				memcpy(snd_message.data, switch_data, 8);
  81:src/main.c    **** 				snd_message.msgIde = MAIN_BOARD_CAN_ID;
 128               		.loc 1 81 24 is_stmt 0 view .LVU13
 129 0014 84E0      		ldi r24,lo8(4)
 130 0016 F82E      		mov r15,r24
 131 0018 E12C      		mov r14,__zero_reg__
 132               	.L4:
 133               	.LBE2:
  38:src/main.c    **** 
 134               		.loc 1 38 2 is_stmt 1 view .LVU14
  40:src/main.c    **** 			CAN_read(&message);
 135               		.loc 1 40 3 view .LVU15
  40:src/main.c    **** 			CAN_read(&message);
 136               		.loc 1 40 6 is_stmt 0 view .LVU16
 137 001a 0E94 0000 		call CAN_checkRX
 138               	.LVL3:
  40:src/main.c    **** 			CAN_read(&message);
 139               		.loc 1 40 5 view .LVU17
 140 001e 8130      		cpi r24,lo8(1)
 141 0020 01F4      		brne .L4
  41:src/main.c    **** 
 142               		.loc 1 41 4 is_stmt 1 view .LVU18
 143 0022 80E0      		ldi r24,lo8(message)
 144 0024 90E0      		ldi r25,hi8(message)
 145 0026 0E94 0000 		call CAN_read
 146               	.LVL4:
  43:src/main.c    **** 			second_byte 	= message.data[1];
 147               		.loc 1 43 4 view .LVU19
  43:src/main.c    **** 			second_byte 	= message.data[1];
 148               		.loc 1 43 31 is_stmt 0 view .LVU20
 149 002a 9091 0000 		lds r25,message
  43:src/main.c    **** 			second_byte 	= message.data[1];
 150               		.loc 1 43 17 view .LVU21
 151 002e 9093 0000 		sts first_byte,r25
  44:src/main.c    **** 
 152               		.loc 1 44 4 is_stmt 1 view .LVU22
  44:src/main.c    **** 
 153               		.loc 1 44 31 is_stmt 0 view .LVU23
 154 0032 8091 0000 		lds r24,message+1
  44:src/main.c    **** 
 155               		.loc 1 44 17 view .LVU24
 156 0036 8093 0000 		sts second_byte,r24
  46:src/main.c    **** 					
 157               		.loc 1 46 4 is_stmt 1 view .LVU25
  46:src/main.c    **** 					
 158               		.loc 1 46 6 is_stmt 0 view .LVU26
 159 003a 9035      		cpi r25,lo8(80)
 160 003c 01F4      		brne .L5
  49:src/main.c    **** 							
 161               		.loc 1 49 5 is_stmt 1 view .LVU27
  49:src/main.c    **** 							
 162               		.loc 1 49 7 is_stmt 0 view .LVU28
 163 003e 8111      		cpse r24,__zero_reg__
 164 0040 00C0      		rjmp .L6
  51:src/main.c    **** 					delay(500);
 165               		.loc 1 51 6 is_stmt 1 view .LVU29
 166 0042 61E0      		ldi r22,lo8(1)
 167 0044 81E3      		ldi r24,lo8(49)
 168 0046 0E94 0000 		call gpio_write_pin
 169               	.LVL5:
  52:src/main.c    **** 					gpio_write_pin(PIN_LED2, false);
 170               		.loc 1 52 6 view .LVU30
 171 004a 84EF      		ldi r24,lo8(-12)
 172 004c 91E0      		ldi r25,lo8(1)
 173 004e 0E94 0000 		call delay
 174               	.LVL6:
  53:src/main.c    **** 							
 175               		.loc 1 53 6 view .LVU31
 176               	.L18:
  67:src/main.c    **** 					}
 177               		.loc 1 67 7 view .LVU32
 178 0052 60E0      		ldi r22,0
 179 0054 81E3      		ldi r24,lo8(49)
 180 0056 0E94 0000 		call gpio_write_pin
 181               	.LVL7:
 182 005a 00C0      		rjmp .L4
 183               	.L6:
  58:src/main.c    **** 
 184               		.loc 1 58 10 view .LVU33
  58:src/main.c    **** 
 185               		.loc 1 58 12 is_stmt 0 view .LVU34
 186 005c 8130      		cpi r24,lo8(1)
 187 005e 01F4      		brne .L4
  60:src/main.c    **** 
 188               		.loc 1 60 6 is_stmt 1 view .LVU35
 189 0060 61E0      		ldi r22,lo8(1)
 190 0062 81E3      		ldi r24,lo8(49)
 191 0064 0E94 0000 		call gpio_write_pin
 192               	.LVL8:
  62:src/main.c    **** 					snd_message.msgIde = MAIN_BOARD_CAN_ID;
 193               		.loc 1 62 6 view .LVU36
 194 0068 88E0      		ldi r24,lo8(8)
 195 006a E0E0      		ldi r30,lo8(dummy_data)
 196 006c F0E0      		ldi r31,hi8(dummy_data)
 197 006e A0E0      		ldi r26,lo8(snd_message)
 198 0070 B0E0      		ldi r27,hi8(snd_message)
 199               		0:
 200 0072 0190      		ld r0,Z+
 201 0074 0D92      		st X+,r0
 202 0076 8A95      		dec r24
 203 0078 01F4      		brne 0b
  63:src/main.c    **** 
 204               		.loc 1 63 6 view .LVU37
  63:src/main.c    **** 
 205               		.loc 1 63 25 is_stmt 0 view .LVU38
 206 007a F092 0000 		sts snd_message+8,r15
 207 007e E092 0000 		sts snd_message+9,r14
  65:src/main.c    **** 						// success
 208               		.loc 1 65 6 is_stmt 1 view .LVU39
  65:src/main.c    **** 						// success
 209               		.loc 1 65 9 is_stmt 0 view .LVU40
 210 0082 0091 0000 		lds r16,snd_message
 211 0086 1091 0000 		lds r17,snd_message+1
 212 008a 2091 0000 		lds r18,snd_message+2
 213 008e 3091 0000 		lds r19,snd_message+3
 214 0092 4091 0000 		lds r20,snd_message+4
 215 0096 5091 0000 		lds r21,snd_message+5
 216 009a 6091 0000 		lds r22,snd_message+6
 217 009e 7091 0000 		lds r23,snd_message+7
 218 00a2 8F2D      		mov r24,r15
 219 00a4 9E2D      		mov r25,r14
 220 00a6 0E94 0000 		call CAN_write
 221               	.LVL9:
  65:src/main.c    **** 						// success
 222               		.loc 1 65 8 view .LVU41
 223 00aa 8130      		cpi r24,lo8(1)
 224 00ac 01F0      		breq .+2
 225 00ae 00C0      		rjmp .L4
 226 00b0 00C0      		rjmp .L18
 227               	.L5:
  74:src/main.c    **** 				
 228               		.loc 1 74 9 is_stmt 1 view .LVU42
  74:src/main.c    **** 				
 229               		.loc 1 74 11 is_stmt 0 view .LVU43
 230 00b2 9335      		cpi r25,lo8(83)
 231 00b4 01F4      		brne .L9
 232               	.LBB3:
  76:src/main.c    **** 
 233               		.loc 1 76 5 is_stmt 1 view .LVU44
  78:src/main.c    **** 				
 234               		.loc 1 78 5 view .LVU45
  78:src/main.c    **** 				
 235               		.loc 1 78 22 is_stmt 0 view .LVU46
 236 00b6 0E94 0000 		call read_switch
 237               	.LVL10:
  80:src/main.c    **** 				snd_message.msgIde = MAIN_BOARD_CAN_ID;
 238               		.loc 1 80 5 is_stmt 1 view .LVU47
  80:src/main.c    **** 				snd_message.msgIde = MAIN_BOARD_CAN_ID;
 239               		.loc 1 80 5 is_stmt 0 view .LVU48
 240 00ba 8983      		std Y+1,r24
 241 00bc 88E0      		ldi r24,lo8(8)
 242               	.LVL11:
  80:src/main.c    **** 				snd_message.msgIde = MAIN_BOARD_CAN_ID;
 243               		.loc 1 80 5 view .LVU49
 244 00be FE01      		movw r30,r28
 245 00c0 3196      		adiw r30,1
 246 00c2 A0E0      		ldi r26,lo8(snd_message)
 247 00c4 B0E0      		ldi r27,hi8(snd_message)
 248               		0:
 249 00c6 0190      		ld r0,Z+
 250 00c8 0D92      		st X+,r0
 251 00ca 8A95      		dec r24
 252 00cc 01F4      		brne 0b
 253               		.loc 1 81 5 is_stmt 1 view .LVU50
 254               		.loc 1 81 24 is_stmt 0 view .LVU51
 255 00ce F092 0000 		sts snd_message+8,r15
 256 00d2 E092 0000 		sts snd_message+9,r14
  82:src/main.c    **** 
  83:src/main.c    **** 				if(CAN_write(snd_message) == 1) {
 257               		.loc 1 83 5 is_stmt 1 view .LVU52
 258               		.loc 1 83 8 is_stmt 0 view .LVU53
 259 00d6 0091 0000 		lds r16,snd_message
 260 00da 1091 0000 		lds r17,snd_message+1
 261 00de 2091 0000 		lds r18,snd_message+2
 262 00e2 3091 0000 		lds r19,snd_message+3
 263 00e6 4091 0000 		lds r20,snd_message+4
 264 00ea 5091 0000 		lds r21,snd_message+5
 265 00ee 6091 0000 		lds r22,snd_message+6
 266 00f2 7091 0000 		lds r23,snd_message+7
 267 00f6 8F2D      		mov r24,r15
 268 00f8 9E2D      		mov r25,r14
 269 00fa 0E94 0000 		call CAN_write
 270               	.LVL12:
  84:src/main.c    **** 					// success
  85:src/main.c    **** 				}
 271               		.loc 1 85 5 is_stmt 1 view .LVU54
 272               		.loc 1 85 5 is_stmt 0 view .LVU55
 273               	.LBE3:
 274 00fe 00C0      		rjmp .L4
 275               	.L9:
  86:src/main.c    **** 
  87:src/main.c    **** 			} // end of switches
  88:src/main.c    **** 
  89:src/main.c    **** 			// ACTION: h-bridge
  90:src/main.c    **** 			else if(first_byte == 'H') {
 276               		.loc 1 90 9 is_stmt 1 view .LVU56
 277               		.loc 1 90 11 is_stmt 0 view .LVU57
 278 0100 9834      		cpi r25,lo8(72)
 279 0102 01F0      		breq .+2
 280 0104 00C0      		rjmp .L10
  91:src/main.c    **** 
  92:src/main.c    **** 				// SUB-ACTION: move {'H', 'M', a >> 8, a & 0xFF, b >> 8, b & 0xFF, num}
  93:src/main.c    **** 				if(second_byte == 'M') {
 281               		.loc 1 93 5 is_stmt 1 view .LVU58
 282               		.loc 1 93 7 is_stmt 0 view .LVU59
 283 0106 8D34      		cpi r24,lo8(77)
 284 0108 01F4      		brne .L11
 285               	.LBB4:
  94:src/main.c    **** 
  95:src/main.c    **** 					int _a, _b; unsigned char num;
 286               		.loc 1 95 6 is_stmt 1 view .LVU60
 287               		.loc 1 95 18 view .LVU61
  96:src/main.c    **** 
  97:src/main.c    **** 					_a 	= (message.data[2] << 8) | message.data[3];
 288               		.loc 1 97 6 view .LVU62
 289               	.LVL13:
  98:src/main.c    **** 					_b 	= (message.data[4] << 8) | message.data[5];
 290               		.loc 1 98 6 view .LVU63
  99:src/main.c    **** 					num = message.data[6];
 291               		.loc 1 99 6 view .LVU64
 100:src/main.c    **** 
 101:src/main.c    **** 					hbridge_move(_a, _b, (uint8_t)(num));
 292               		.loc 1 101 6 view .LVU65
 293 010a 6091 0000 		lds r22,message+4
 294 010e 7091 0000 		lds r23,message+4+1
 295 0112 7627      		eor r23,r22
 296 0114 6727      		eor r22,r23
 297 0116 7627      		eor r23,r22
 298 0118 8091 0000 		lds r24,message+2
 299 011c 9091 0000 		lds r25,message+2+1
 300 0120 4091 0000 		lds r20,message+6
 301 0124 9827      		eor r25,r24
 302 0126 8927      		eor r24,r25
 303 0128 9827      		eor r25,r24
 304 012a 0E94 0000 		call hbridge_move
 305               	.LVL14:
 102:src/main.c    **** 
 103:src/main.c    **** 					can_send_done();
 306               		.loc 1 103 6 view .LVU66
 307               	.L17:
 308               		.loc 1 103 6 is_stmt 0 view .LVU67
 309               	.LBE4:
 310               	.LBB5:
 104:src/main.c    **** 
 105:src/main.c    **** 				} // end of move
 106:src/main.c    **** 
 107:src/main.c    **** 				// SUB-ACTION: break {'H','B', num}
 108:src/main.c    **** 				else if(second_byte == 'B') {
 109:src/main.c    **** 					
 110:src/main.c    **** 					hbridge_break((uint8_t)(message.data[2]));
 111:src/main.c    **** 
 112:src/main.c    **** 					can_send_done();
 113:src/main.c    **** 
 114:src/main.c    **** 				} // end of break
 115:src/main.c    **** 
 116:src/main.c    **** 				// SUB-ACTION: time {'H', 'T/t', num, dir >> 8, dir & 0xFF, achieve >> 8, achieve & 0xFF, time 
 117:src/main.c    **** 				else if(second_byte == 'T' || second_byte == 't') {
 118:src/main.c    **** 
 119:src/main.c    **** 					unsigned char _num; int _dir, _achieve, _time;
 120:src/main.c    **** 					
 121:src/main.c    **** 					if(second_byte == 'T') {
 122:src/main.c    **** 						_num = 0;
 123:src/main.c    **** 					} else {
 124:src/main.c    **** 						_num = 1;
 125:src/main.c    **** 					}
 126:src/main.c    **** 					
 127:src/main.c    **** 					_dir 		= (message.data[2] << 8) | message.data[3];
 128:src/main.c    **** 					_achieve 	= (message.data[4] << 8) | message.data[5];
 129:src/main.c    **** 					_time 		= (message.data[6] << 8) | message.data[7];
 130:src/main.c    **** 
 131:src/main.c    **** 					hbridge_time((int)(_num), _dir, _achieve, _time);
 132:src/main.c    **** 
 133:src/main.c    **** 					can_send_done();
 134:src/main.c    **** 
 135:src/main.c    **** 				} // end of time
 136:src/main.c    **** 			} // end of h-bridge
 137:src/main.c    **** 
 138:src/main.c    **** 			// ACTION: stepper motor
 139:src/main.c    **** 			else if(first_byte == 's') {
 140:src/main.c    **** 				
 141:src/main.c    **** 				// SUB-ACTION: enable {'s', 'E', state, num}
 142:src/main.c    **** 				if(second_byte == 'E') {
 143:src/main.c    **** 					
 144:src/main.c    **** 					uint8_t state, num;
 145:src/main.c    **** 
 146:src/main.c    **** 					state 	= (uint8_t)(message.data[2]);
 147:src/main.c    **** 					num 	= (uint8_t)(message.data[3]);
 148:src/main.c    **** 
 149:src/main.c    **** 					enable_stepper(state, num);
 150:src/main.c    **** 
 151:src/main.c    **** 					can_send_done();
 152:src/main.c    **** 
 153:src/main.c    **** 				} // end of enable
 154:src/main.c    **** 
 155:src/main.c    **** 				// SUB-ACTION: rpm {'s', 'R', rpm >> 8, rpm & 0xFF, num}
 156:src/main.c    **** 				else if(second_byte == 'R') {
 157:src/main.c    **** 
 158:src/main.c    **** 					int _rpm; uint8_t num;
 159:src/main.c    **** 
 160:src/main.c    **** 					_rpm 	= (message.data[2] << 8) | message.data[3];
 161:src/main.c    **** 					num 	= (uint8_t)(message.data[4]);
 162:src/main.c    **** 
 163:src/main.c    **** 					set_rpm_stepper(_rpm, num);
 164:src/main.c    **** 
 165:src/main.c    **** 					can_send_done();
 166:src/main.c    **** 
 167:src/main.c    **** 				} // end of rpm
 168:src/main.c    **** 
 169:src/main.c    **** 				// SUB-ACTION: move {'s', 'M', steps >> 8, rpm & 0xFF, dir, num}
 170:src/main.c    **** 				else if(second_byte == 'M') {
 171:src/main.c    **** 
 172:src/main.c    **** 					int steps; unsigned char dir; uint8_t num;
 173:src/main.c    **** 
 174:src/main.c    **** 					steps 	= (message.data[2] << 8) | message.data[3];
 175:src/main.c    **** 					dir 	= message.data[4];
 176:src/main.c    **** 					num 	= (uint8_t)(message.data[5]);
 177:src/main.c    **** 
 178:src/main.c    **** 					move_stepper(steps, dir, num);
 179:src/main.c    **** 
 180:src/main.c    **** 					can_send_done();
 311               		.loc 1 180 6 is_stmt 1 view .LVU68
 312 012e 0E94 0000 		call can_send_done
 313               	.LVL15:
 314 0132 00C0      		rjmp .L4
 315               	.L11:
 316               	.LBE5:
 108:src/main.c    **** 					
 317               		.loc 1 108 10 view .LVU69
 108:src/main.c    **** 					
 318               		.loc 1 108 12 is_stmt 0 view .LVU70
 319 0134 8234      		cpi r24,lo8(66)
 320 0136 01F4      		brne .L12
 110:src/main.c    **** 
 321               		.loc 1 110 6 is_stmt 1 view .LVU71
 322 0138 8091 0000 		lds r24,message+2
 323 013c 0E94 0000 		call hbridge_break
 324               	.LVL16:
 112:src/main.c    **** 
 325               		.loc 1 112 6 view .LVU72
 326 0140 00C0      		rjmp .L17
 327               	.L12:
 117:src/main.c    **** 
 328               		.loc 1 117 10 view .LVU73
 117:src/main.c    **** 
 329               		.loc 1 117 12 is_stmt 0 view .LVU74
 330 0142 982F      		mov r25,r24
 331 0144 9F7D      		andi r25,lo8(-33)
 332 0146 9435      		cpi r25,lo8(84)
 333 0148 01F0      		breq .+2
 334 014a 00C0      		rjmp .L4
 335               	.LBB6:
 119:src/main.c    **** 					
 336               		.loc 1 119 6 is_stmt 1 view .LVU75
 119:src/main.c    **** 					
 337               		.loc 1 119 26 view .LVU76
 121:src/main.c    **** 						_num = 0;
 338               		.loc 1 121 6 view .LVU77
 339               	.LVL17:
 127:src/main.c    **** 					_achieve 	= (message.data[4] << 8) | message.data[5];
 340               		.loc 1 127 6 view .LVU78
 128:src/main.c    **** 					_time 		= (message.data[6] << 8) | message.data[7];
 341               		.loc 1 128 6 view .LVU79
 129:src/main.c    **** 
 342               		.loc 1 129 6 view .LVU80
 131:src/main.c    **** 
 343               		.loc 1 131 6 view .LVU81
 344 014c 2091 0000 		lds r18,message+6
 345 0150 3091 0000 		lds r19,message+6+1
 346 0154 3227      		eor r19,r18
 347 0156 2327      		eor r18,r19
 348 0158 3227      		eor r19,r18
 349 015a 4091 0000 		lds r20,message+4
 350 015e 5091 0000 		lds r21,message+4+1
 351 0162 5427      		eor r21,r20
 352 0164 4527      		eor r20,r21
 353 0166 5427      		eor r21,r20
 354 0168 6091 0000 		lds r22,message+2
 355 016c 7091 0000 		lds r23,message+2+1
 356 0170 7627      		eor r23,r22
 357 0172 6727      		eor r22,r23
 358 0174 7627      		eor r23,r22
 121:src/main.c    **** 						_num = 0;
 359               		.loc 1 121 8 is_stmt 0 view .LVU82
 360 0176 E1E0      		ldi r30,lo8(1)
 361 0178 F0E0      		ldi r31,0
 362 017a 8435      		cpi r24,lo8(84)
 363 017c 01F4      		brne .L13
 364 017e F0E0      		ldi r31,0
 365 0180 E0E0      		ldi r30,0
 366               	.L13:
 131:src/main.c    **** 
 367               		.loc 1 131 6 view .LVU83
 368 0182 CF01      		movw r24,r30
 369               	.LVL18:
 131:src/main.c    **** 
 370               		.loc 1 131 6 view .LVU84
 371 0184 0E94 0000 		call hbridge_time
 372               	.LVL19:
 133:src/main.c    **** 
 373               		.loc 1 133 6 is_stmt 1 view .LVU85
 374 0188 00C0      		rjmp .L17
 375               	.L10:
 133:src/main.c    **** 
 376               		.loc 1 133 6 is_stmt 0 view .LVU86
 377               	.LBE6:
 139:src/main.c    **** 				
 378               		.loc 1 139 9 is_stmt 1 view .LVU87
 139:src/main.c    **** 				
 379               		.loc 1 139 11 is_stmt 0 view .LVU88
 380 018a 9337      		cpi r25,lo8(115)
 381 018c 01F0      		breq .+2
 382 018e 00C0      		rjmp .L4
 142:src/main.c    **** 					
 383               		.loc 1 142 5 is_stmt 1 view .LVU89
 142:src/main.c    **** 					
 384               		.loc 1 142 7 is_stmt 0 view .LVU90
 385 0190 8534      		cpi r24,lo8(69)
 386 0192 01F4      		brne .L14
 387               	.LBB7:
 144:src/main.c    **** 
 388               		.loc 1 144 6 is_stmt 1 view .LVU91
 146:src/main.c    **** 					num 	= (uint8_t)(message.data[3]);
 389               		.loc 1 146 6 view .LVU92
 390               	.LVL20:
 147:src/main.c    **** 
 391               		.loc 1 147 6 view .LVU93
 149:src/main.c    **** 
 392               		.loc 1 149 6 view .LVU94
 393 0194 6091 0000 		lds r22,message+3
 394 0198 8091 0000 		lds r24,message+2
 395 019c 0E94 0000 		call enable_stepper
 396               	.LVL21:
 151:src/main.c    **** 
 397               		.loc 1 151 6 view .LVU95
 398 01a0 00C0      		rjmp .L17
 399               	.L14:
 151:src/main.c    **** 
 400               		.loc 1 151 6 is_stmt 0 view .LVU96
 401               	.LBE7:
 156:src/main.c    **** 
 402               		.loc 1 156 10 is_stmt 1 view .LVU97
 156:src/main.c    **** 
 403               		.loc 1 156 12 is_stmt 0 view .LVU98
 404 01a2 8235      		cpi r24,lo8(82)
 405 01a4 01F4      		brne .L15
 406               	.LBB8:
 158:src/main.c    **** 
 407               		.loc 1 158 6 is_stmt 1 view .LVU99
 158:src/main.c    **** 
 408               		.loc 1 158 16 view .LVU100
 160:src/main.c    **** 					num 	= (uint8_t)(message.data[4]);
 409               		.loc 1 160 6 view .LVU101
 410               	.LVL22:
 161:src/main.c    **** 
 411               		.loc 1 161 6 view .LVU102
 163:src/main.c    **** 
 412               		.loc 1 163 6 view .LVU103
 413 01a6 8091 0000 		lds r24,message+2
 414 01aa 9091 0000 		lds r25,message+2+1
 415 01ae 6091 0000 		lds r22,message+4
 416 01b2 9827      		eor r25,r24
 417 01b4 8927      		eor r24,r25
 418 01b6 9827      		eor r25,r24
 419 01b8 0E94 0000 		call set_rpm_stepper
 420               	.LVL23:
 165:src/main.c    **** 
 421               		.loc 1 165 6 view .LVU104
 422 01bc 00C0      		rjmp .L17
 423               	.L15:
 165:src/main.c    **** 
 424               		.loc 1 165 6 is_stmt 0 view .LVU105
 425               	.LBE8:
 170:src/main.c    **** 
 426               		.loc 1 170 10 is_stmt 1 view .LVU106
 170:src/main.c    **** 
 427               		.loc 1 170 12 is_stmt 0 view .LVU107
 428 01be 8D34      		cpi r24,lo8(77)
 429 01c0 01F0      		breq .+2
 430 01c2 00C0      		rjmp .L4
 431               	.LBB9:
 172:src/main.c    **** 
 432               		.loc 1 172 6 is_stmt 1 view .LVU108
 172:src/main.c    **** 
 433               		.loc 1 172 17 view .LVU109
 172:src/main.c    **** 
 434               		.loc 1 172 36 view .LVU110
 174:src/main.c    **** 					dir 	= message.data[4];
 435               		.loc 1 174 6 view .LVU111
 436               	.LVL24:
 175:src/main.c    **** 					num 	= (uint8_t)(message.data[5]);
 437               		.loc 1 175 6 view .LVU112
 176:src/main.c    **** 
 438               		.loc 1 176 6 view .LVU113
 178:src/main.c    **** 
 439               		.loc 1 178 6 view .LVU114
 440 01c4 8091 0000 		lds r24,message+2
 441 01c8 9091 0000 		lds r25,message+2+1
 442 01cc 4091 0000 		lds r20,message+5
 443 01d0 6091 0000 		lds r22,message+4
 444 01d4 9827      		eor r25,r24
 445 01d6 8927      		eor r24,r25
 446 01d8 9827      		eor r25,r24
 447 01da 0E94 0000 		call move_stepper
 448               	.LVL25:
 178:src/main.c    **** 
 449               		.loc 1 178 6 is_stmt 0 view .LVU115
 450 01de 00C0      		rjmp .L17
 451               	.LBE9:
 452               		.cfi_endproc
 453               	.LFE23:
 455               		.comm	second_byte,1,1
 456               		.comm	first_byte,1,1
 457               	.global	dummy_data
 458               		.data
 461               	dummy_data:
 462 0000 FF        		.byte	-1
 463 0001 FF        		.byte	-1
 464 0002 FF        		.byte	-1
 465 0003 FF        		.byte	-1
 466 0004 FF        		.byte	-1
 467 0005 FF        		.byte	-1
 468 0006 FF        		.byte	-1
 469 0007 FF        		.byte	-1
 470               		.comm	snd_message,10,1
 471               		.comm	message,10,1
 472               		.text
 473               	.Letext0:
 474               		.file 2 "/usr/local/Cellar/avr-gcc/8.3.0/avr/include/stdint.h"
 475               		.file 3 "/usr/local/Cellar/avr-gcc/8.3.0/lib/avr-gcc/8/gcc/avr/8.3.0/include/stddef.h"
 476               		.file 4 "/usr/local/Cellar/avr-gcc/8.3.0/avr/include/stdlib.h"
 477               		.file 5 "/usr/local/Cellar/avr-gcc/8.3.0/avr/include/stdio.h"
 478               		.file 6 "src/can.h"
 479               		.file 7 "src/system.h"
 480               		.file 8 "src/hbridge.h"
 481               		.file 9 "src/stepper.h"
 482               		.file 10 "src/gpio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/tmp//ccMxipOG.s:2      *ABS*:000000000000003e __SP_H__
/var/tmp//ccMxipOG.s:3      *ABS*:000000000000003d __SP_L__
/var/tmp//ccMxipOG.s:4      *ABS*:000000000000003f __SREG__
/var/tmp//ccMxipOG.s:5      *ABS*:000000000000003b __RAMPZ__
/var/tmp//ccMxipOG.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/tmp//ccMxipOG.s:7      *ABS*:0000000000000001 __zero_reg__
/var/tmp//ccMxipOG.s:12     .text:0000000000000000 can_send_done
                            *COM*:000000000000000a snd_message
/var/tmp//ccMxipOG.s:104    .text.startup:0000000000000000 main
                            *COM*:000000000000000a message
                            *COM*:0000000000000001 first_byte
                            *COM*:0000000000000001 second_byte
/var/tmp//ccMxipOG.s:461    .data:0000000000000000 dummy_data

UNDEFINED SYMBOLS
CAN_write
system_init
CAN_checkRX
CAN_read
gpio_write_pin
delay
read_switch
hbridge_move
hbridge_break
hbridge_time
enable_stepper
set_rpm_stepper
move_stepper
__do_copy_data
__do_clear_bss
