   1               		.file	"hbridge.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.rodata.str1.1,"aMS",@progbits,1
  12               	.LC0:
  13 0000 494E 464F 		.string	"INFO! hbridge_move - [A_value, B_value, num] - "
  13      2120 6862 
  13      7269 6467 
  13      655F 6D6F 
  13      7665 202D 
  14               	.LC1:
  15 0030 2C00      		.string	","
  16               	.LC2:
  17 0032 0A00      		.string	"\n"
  18               		.text
  19               	.global	hbridge_move
  21               	hbridge_move:
  22               	.LVL0:
  23               	.LFB23:
  24               		.file 1 "src/hbridge.c"
   1:src/hbridge.c **** #include "hbridge.h"
   2:src/hbridge.c **** 
   3:src/hbridge.c **** int current_A_1, current_B_1, current_A_2, current_B_2;
   4:src/hbridge.c **** 
   5:src/hbridge.c **** /*
   6:src/hbridge.c ****  *  Function: unsigned int init_hbridge(void)
   7:src/hbridge.c ****  *  Description: init the hbridge
   8:src/hbridge.c ****  */
   9:src/hbridge.c **** unsigned char init_hbridge(void) {
  10:src/hbridge.c **** 
  11:src/hbridge.c ****     // set everything to output
  12:src/hbridge.c ****     gpio_register_pin(PIN_MOTOR1_A, GPIO_DIRECTION_OUTPUT, false);
  13:src/hbridge.c ****     gpio_register_pin(PIN_MOTOR1_B, GPIO_DIRECTION_OUTPUT, false);
  14:src/hbridge.c ****     gpio_register_pin(PIN_MOTOR2_A, GPIO_DIRECTION_OUTPUT, false);
  15:src/hbridge.c ****     gpio_register_pin(PIN_MOTOR2_B, GPIO_DIRECTION_OUTPUT, false);			
  16:src/hbridge.c **** 
  17:src/hbridge.c ****     ICR3 = 5000;
  18:src/hbridge.c **** 
  19:src/hbridge.c **** 	TCNT3 = 0;
  20:src/hbridge.c **** 	TCNT0 = 0;
  21:src/hbridge.c **** 
  22:src/hbridge.c **** 	OCR3A = 0;
  23:src/hbridge.c **** 	OCR3B = 0;
  24:src/hbridge.c **** 	OCR3C = 0;
  25:src/hbridge.c **** 
  26:src/hbridge.c **** 	TCCR3A = (1 << COM3A1)  | (1 << COM3B1) | (1 << COM3C1) | (1 << WGM31);
  27:src/hbridge.c **** 	TCCR3B = (1<< CS31) | (1 << WGM32) | (1 << WGM33); 		// PRESKALER = 8
  28:src/hbridge.c **** 
  29:src/hbridge.c ****     TCCR0A |= (1<<WGM00) | (1<<WGM01) | (1<<COM0A1) | (1<<CS00);
  30:src/hbridge.c **** 
  31:src/hbridge.c ****     hbridge_move(0,0,1);
  32:src/hbridge.c ****     hbridge_move(0,0,2);
  33:src/hbridge.c **** 
  34:src/hbridge.c ****     return 1;
  35:src/hbridge.c **** } // end of init_hbridge()
  36:src/hbridge.c **** 
  37:src/hbridge.c **** /*
  38:src/hbridge.c ****  * Function: void hbridge_move(int A_value, int B_value, uint8_t num);
  39:src/hbridge.c ****  * Description: move the hbridge by A_value and B_value. The ID is num
  40:src/hbridge.c ****  */
  41:src/hbridge.c **** void hbridge_move(int A_value, int B_value, uint8_t num) {
  25               		.loc 1 41 58 view -0
  26               		.cfi_startproc
  27               		.loc 1 41 58 is_stmt 0 view .LVU1
  28 0000 CF92      		push r12
  29               	.LCFI0:
  30               		.cfi_def_cfa_offset 3
  31               		.cfi_offset 12, -2
  32 0002 DF92      		push r13
  33               	.LCFI1:
  34               		.cfi_def_cfa_offset 4
  35               		.cfi_offset 13, -3
  36 0004 EF92      		push r14
  37               	.LCFI2:
  38               		.cfi_def_cfa_offset 5
  39               		.cfi_offset 14, -4
  40 0006 FF92      		push r15
  41               	.LCFI3:
  42               		.cfi_def_cfa_offset 6
  43               		.cfi_offset 15, -5
  44 0008 0F93      		push r16
  45               	.LCFI4:
  46               		.cfi_def_cfa_offset 7
  47               		.cfi_offset 16, -6
  48 000a 1F93      		push r17
  49               	.LCFI5:
  50               		.cfi_def_cfa_offset 8
  51               		.cfi_offset 17, -7
  52 000c CF93      		push r28
  53               	.LCFI6:
  54               		.cfi_def_cfa_offset 9
  55               		.cfi_offset 28, -8
  56 000e DF93      		push r29
  57               	.LCFI7:
  58               		.cfi_def_cfa_offset 10
  59               		.cfi_offset 29, -9
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 8 */
  63               	.L__stack_usage = 8
  64 0010 8C01      		movw r16,r24
  65 0012 EB01      		movw r28,r22
  66 0014 F42E      		mov r15,r20
  42:src/hbridge.c ****     
  43:src/hbridge.c ****    debug_printf("INFO! hbridge_move - [A_value, B_value, num] - ");
  67               		.loc 1 43 4 is_stmt 1 view .LVU2
  68 0016 80E0      		ldi r24,lo8(.LC0)
  69 0018 90E0      		ldi r25,hi8(.LC0)
  70               	.LVL1:
  71               		.loc 1 43 4 is_stmt 0 view .LVU3
  72 001a 0E94 0000 		call debug_printf
  73               	.LVL2:
  44:src/hbridge.c ****    debug_printf_num(A_value);
  74               		.loc 1 44 4 is_stmt 1 view .LVU4
  75 001e C801      		movw r24,r16
  76 0020 0E94 0000 		call debug_printf_num
  77               	.LVL3:
  45:src/hbridge.c ****    debug_printf(",");
  78               		.loc 1 45 4 view .LVU5
  79 0024 80E0      		ldi r24,lo8(.LC1)
  80 0026 90E0      		ldi r25,hi8(.LC1)
  81 0028 0E94 0000 		call debug_printf
  82               	.LVL4:
  46:src/hbridge.c ****    debug_printf_num(B_value);
  83               		.loc 1 46 4 view .LVU6
  84 002c CE01      		movw r24,r28
  85 002e 0E94 0000 		call debug_printf_num
  86               	.LVL5:
  47:src/hbridge.c ****    debug_printf(",");
  87               		.loc 1 47 4 view .LVU7
  88 0032 80E0      		ldi r24,lo8(.LC1)
  89 0034 90E0      		ldi r25,hi8(.LC1)
  90 0036 0E94 0000 		call debug_printf
  91               	.LVL6:
  48:src/hbridge.c ****    debug_printf_num(num);
  92               		.loc 1 48 4 view .LVU8
  93 003a 8F2D      		mov r24,r15
  94 003c 90E0      		ldi r25,0
  95 003e 0E94 0000 		call debug_printf_num
  96               	.LVL7:
  49:src/hbridge.c ****    debug_printf("\n");
  97               		.loc 1 49 4 view .LVU9
  98 0042 80E0      		ldi r24,lo8(.LC2)
  99 0044 90E0      		ldi r25,hi8(.LC2)
 100 0046 0E94 0000 		call debug_printf
 101               	.LVL8:
  50:src/hbridge.c **** 
  51:src/hbridge.c ****     switch(num) {
 102               		.loc 1 51 5 view .LVU10
 103 004a 81E0      		ldi r24,lo8(1)
 104 004c F816      		cp r15,r24
 105 004e 01F0      		breq .L2
 106 0050 82E0      		ldi r24,lo8(2)
 107 0052 F816      		cp r15,r24
 108 0054 01F0      		breq .L3
 109               	.L1:
 110               	/* epilogue start */
  52:src/hbridge.c ****         case 1:
  53:src/hbridge.c ****             // convert to register
  54:src/hbridge.c ****             OCR3C = (uint16_t)(conv_to_16(A_value));    // PE5
  55:src/hbridge.c ****             OCR0A = (uint8_t)(conv_to_8(B_value));      // PB7
  56:src/hbridge.c ****             
  57:src/hbridge.c ****             // if one of it is 0, then just write a LOW
  58:src/hbridge.c ****             if(A_value == 0) {
  59:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR2_A, LOW);
  60:src/hbridge.c ****             } 
  61:src/hbridge.c ****             
  62:src/hbridge.c ****             if(B_value == 0) {
  63:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR2_B, LOW);
  64:src/hbridge.c ****             }
  65:src/hbridge.c **** 
  66:src/hbridge.c ****             // update the local variable
  67:src/hbridge.c ****             current_A_2 = A_value;
  68:src/hbridge.c ****             current_B_2 = B_value;
  69:src/hbridge.c **** 
  70:src/hbridge.c ****             break;
  71:src/hbridge.c ****         case 2:
  72:src/hbridge.c ****             // convert to register
  73:src/hbridge.c ****             OCR3A = (uint16_t)(conv_to_16(A_value));    // PE3
  74:src/hbridge.c ****             OCR3B = (uint16_t)(conv_to_16(B_value));    // PE4
  75:src/hbridge.c **** 
  76:src/hbridge.c ****             // if one of it is 0, then just write a LOW
  77:src/hbridge.c ****             if(A_value == 0) {
  78:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR1_A, LOW);
  79:src/hbridge.c ****             } 
  80:src/hbridge.c ****             
  81:src/hbridge.c ****             if(B_value == 0) {
  82:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR1_B, LOW);
  83:src/hbridge.c ****             }
  84:src/hbridge.c **** 
  85:src/hbridge.c ****             // update the local variable
  86:src/hbridge.c ****             current_A_1 = A_value;
  87:src/hbridge.c ****             current_B_1 = B_value;
  88:src/hbridge.c **** 
  89:src/hbridge.c ****             break;
  90:src/hbridge.c ****     }
  91:src/hbridge.c **** } // end of hbridge_move()
 111               		.loc 1 91 1 is_stmt 0 view .LVU11
 112 0056 DF91      		pop r29
 113 0058 CF91      		pop r28
 114               	.LVL9:
 115               		.loc 1 91 1 view .LVU12
 116 005a 1F91      		pop r17
 117 005c 0F91      		pop r16
 118               	.LVL10:
 119               		.loc 1 91 1 view .LVU13
 120 005e FF90      		pop r15
 121               	.LVL11:
 122               		.loc 1 91 1 view .LVU14
 123 0060 EF90      		pop r14
 124 0062 DF90      		pop r13
 125 0064 CF90      		pop r12
 126 0066 0895      		ret
 127               	.LVL12:
 128               	.L2:
  54:src/hbridge.c ****             OCR0A = (uint8_t)(conv_to_8(B_value));      // PB7
 129               		.loc 1 54 13 is_stmt 1 view .LVU15
  54:src/hbridge.c ****             OCR0A = (uint8_t)(conv_to_8(B_value));      // PB7
 130               		.loc 1 54 32 is_stmt 0 view .LVU16
 131 0068 2FEF      		ldi r18,lo8(-1)
 132 006a 3FEF      		ldi r19,lo8(-1)
 133 006c D801      		movw r26,r16
 134 006e 0E94 0000 		call __usmulhisi3
 135 0072 24E6      		ldi r18,lo8(100)
 136 0074 30E0      		ldi r19,0
 137 0076 40E0      		ldi r20,0
 138 0078 50E0      		ldi r21,0
 139 007a 0E94 0000 		call __divmodsi4
  54:src/hbridge.c ****             OCR0A = (uint8_t)(conv_to_8(B_value));      // PB7
 140               		.loc 1 54 19 view .LVU17
 141 007e 3093 9D00 		sts 156+1,r19
 142 0082 2093 9C00 		sts 156,r18
  55:src/hbridge.c ****             
 143               		.loc 1 55 13 is_stmt 1 view .LVU18
  55:src/hbridge.c ****             
 144               		.loc 1 55 31 is_stmt 0 view .LVU19
 145 0086 2FEF      		ldi r18,lo8(-1)
 146 0088 2C9F      		mul r18,r28
 147 008a C001      		movw r24,r0
 148 008c 2D9F      		mul r18,r29
 149 008e 900D      		add r25,r0
 150 0090 1124      		clr __zero_reg__
 151 0092 64E6      		ldi r22,lo8(100)
 152 0094 70E0      		ldi r23,0
 153 0096 0E94 0000 		call __divmodhi4
  55:src/hbridge.c ****             
 154               		.loc 1 55 19 view .LVU20
 155 009a 67BD      		out 0x27,r22
  58:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR2_A, LOW);
 156               		.loc 1 58 13 is_stmt 1 view .LVU21
  58:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR2_A, LOW);
 157               		.loc 1 58 15 is_stmt 0 view .LVU22
 158 009c 0115      		cp r16,__zero_reg__
 159 009e 1105      		cpc r17,__zero_reg__
 160 00a0 01F4      		brne .L5
  59:src/hbridge.c ****             } 
 161               		.loc 1 59 17 is_stmt 1 view .LVU23
 162 00a2 60E0      		ldi r22,0
 163 00a4 85E2      		ldi r24,lo8(37)
 164 00a6 0E94 0000 		call gpio_write_pin
 165               	.LVL13:
 166               	.L5:
  62:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR2_B, LOW);
 167               		.loc 1 62 13 view .LVU24
  62:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR2_B, LOW);
 168               		.loc 1 62 15 is_stmt 0 view .LVU25
 169 00aa 2097      		sbiw r28,0
 170 00ac 01F4      		brne .L6
  63:src/hbridge.c ****             }
 171               		.loc 1 63 17 is_stmt 1 view .LVU26
 172 00ae 60E0      		ldi r22,0
 173 00b0 8FE0      		ldi r24,lo8(15)
 174 00b2 0E94 0000 		call gpio_write_pin
 175               	.LVL14:
 176               	.L6:
  67:src/hbridge.c ****             current_B_2 = B_value;
 177               		.loc 1 67 13 view .LVU27
  67:src/hbridge.c ****             current_B_2 = B_value;
 178               		.loc 1 67 25 is_stmt 0 view .LVU28
 179 00b6 1093 0000 		sts current_A_2+1,r17
 180 00ba 0093 0000 		sts current_A_2,r16
  68:src/hbridge.c **** 
 181               		.loc 1 68 13 is_stmt 1 view .LVU29
  68:src/hbridge.c **** 
 182               		.loc 1 68 25 is_stmt 0 view .LVU30
 183 00be D093 0000 		sts current_B_2+1,r29
 184 00c2 C093 0000 		sts current_B_2,r28
  70:src/hbridge.c ****         case 2:
 185               		.loc 1 70 13 is_stmt 1 view .LVU31
 186 00c6 00C0      		rjmp .L1
 187               	.L3:
  73:src/hbridge.c ****             OCR3B = (uint16_t)(conv_to_16(B_value));    // PE4
 188               		.loc 1 73 13 view .LVU32
  73:src/hbridge.c ****             OCR3B = (uint16_t)(conv_to_16(B_value));    // PE4
 189               		.loc 1 73 32 is_stmt 0 view .LVU33
 190 00c8 2FEF      		ldi r18,lo8(-1)
 191 00ca 3FEF      		ldi r19,lo8(-1)
 192 00cc D801      		movw r26,r16
 193 00ce 0E94 0000 		call __usmulhisi3
 194 00d2 24E6      		ldi r18,lo8(100)
 195 00d4 C22E      		mov r12,r18
 196 00d6 D12C      		mov r13,__zero_reg__
 197 00d8 E12C      		mov r14,__zero_reg__
 198 00da F12C      		mov r15,__zero_reg__
 199 00dc A701      		movw r20,r14
 200 00de 9601      		movw r18,r12
 201 00e0 0E94 0000 		call __divmodsi4
  73:src/hbridge.c ****             OCR3B = (uint16_t)(conv_to_16(B_value));    // PE4
 202               		.loc 1 73 19 view .LVU34
 203 00e4 3093 9900 		sts 152+1,r19
 204 00e8 2093 9800 		sts 152,r18
  74:src/hbridge.c **** 
 205               		.loc 1 74 13 is_stmt 1 view .LVU35
  74:src/hbridge.c **** 
 206               		.loc 1 74 32 is_stmt 0 view .LVU36
 207 00ec 2FEF      		ldi r18,lo8(-1)
 208 00ee 3FEF      		ldi r19,lo8(-1)
 209 00f0 DE01      		movw r26,r28
 210 00f2 0E94 0000 		call __usmulhisi3
 211 00f6 A701      		movw r20,r14
 212 00f8 9601      		movw r18,r12
 213 00fa 0E94 0000 		call __divmodsi4
  74:src/hbridge.c **** 
 214               		.loc 1 74 19 view .LVU37
 215 00fe 3093 9B00 		sts 154+1,r19
 216 0102 2093 9A00 		sts 154,r18
  77:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR1_A, LOW);
 217               		.loc 1 77 13 is_stmt 1 view .LVU38
  77:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR1_A, LOW);
 218               		.loc 1 77 15 is_stmt 0 view .LVU39
 219 0106 0115      		cp r16,__zero_reg__
 220 0108 1105      		cpc r17,__zero_reg__
 221 010a 01F4      		brne .L7
  78:src/hbridge.c ****             } 
 222               		.loc 1 78 17 is_stmt 1 view .LVU40
 223 010c 60E0      		ldi r22,0
 224 010e 83E2      		ldi r24,lo8(35)
 225 0110 0E94 0000 		call gpio_write_pin
 226               	.LVL15:
 227               	.L7:
  81:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR1_B, LOW);
 228               		.loc 1 81 13 view .LVU41
  81:src/hbridge.c ****                 gpio_write_pin(PIN_MOTOR1_B, LOW);
 229               		.loc 1 81 15 is_stmt 0 view .LVU42
 230 0114 2097      		sbiw r28,0
 231 0116 01F4      		brne .L8
  82:src/hbridge.c ****             }
 232               		.loc 1 82 17 is_stmt 1 view .LVU43
 233 0118 60E0      		ldi r22,0
 234 011a 84E2      		ldi r24,lo8(36)
 235 011c 0E94 0000 		call gpio_write_pin
 236               	.LVL16:
 237               	.L8:
  86:src/hbridge.c ****             current_B_1 = B_value;
 238               		.loc 1 86 13 view .LVU44
  86:src/hbridge.c ****             current_B_1 = B_value;
 239               		.loc 1 86 25 is_stmt 0 view .LVU45
 240 0120 1093 0000 		sts current_A_1+1,r17
 241 0124 0093 0000 		sts current_A_1,r16
  87:src/hbridge.c **** 
 242               		.loc 1 87 13 is_stmt 1 view .LVU46
  87:src/hbridge.c **** 
 243               		.loc 1 87 25 is_stmt 0 view .LVU47
 244 0128 D093 0000 		sts current_B_1+1,r29
 245 012c C093 0000 		sts current_B_1,r28
  89:src/hbridge.c ****     }
 246               		.loc 1 89 13 is_stmt 1 view .LVU48
 247               		.loc 1 91 1 is_stmt 0 view .LVU49
 248 0130 00C0      		rjmp .L1
 249               		.cfi_endproc
 250               	.LFE23:
 252               	.global	init_hbridge
 254               	init_hbridge:
 255               	.LFB22:
   9:src/hbridge.c **** 
 256               		.loc 1 9 34 is_stmt 1 view -0
 257               		.cfi_startproc
 258               	/* prologue: function */
 259               	/* frame size = 0 */
 260               	/* stack size = 0 */
 261               	.L__stack_usage = 0
  12:src/hbridge.c ****     gpio_register_pin(PIN_MOTOR1_B, GPIO_DIRECTION_OUTPUT, false);
 262               		.loc 1 12 5 view .LVU51
 263 0132 40E0      		ldi r20,0
 264 0134 61E0      		ldi r22,lo8(1)
 265 0136 83E2      		ldi r24,lo8(35)
 266 0138 0E94 0000 		call gpio_register_pin
 267               	.LVL17:
  13:src/hbridge.c ****     gpio_register_pin(PIN_MOTOR2_A, GPIO_DIRECTION_OUTPUT, false);
 268               		.loc 1 13 5 view .LVU52
 269 013c 40E0      		ldi r20,0
 270 013e 61E0      		ldi r22,lo8(1)
 271 0140 84E2      		ldi r24,lo8(36)
 272 0142 0E94 0000 		call gpio_register_pin
 273               	.LVL18:
  14:src/hbridge.c ****     gpio_register_pin(PIN_MOTOR2_B, GPIO_DIRECTION_OUTPUT, false);			
 274               		.loc 1 14 5 view .LVU53
 275 0146 40E0      		ldi r20,0
 276 0148 61E0      		ldi r22,lo8(1)
 277 014a 85E2      		ldi r24,lo8(37)
 278 014c 0E94 0000 		call gpio_register_pin
 279               	.LVL19:
  15:src/hbridge.c **** 
 280               		.loc 1 15 5 view .LVU54
 281 0150 40E0      		ldi r20,0
 282 0152 61E0      		ldi r22,lo8(1)
 283 0154 8FE0      		ldi r24,lo8(15)
 284 0156 0E94 0000 		call gpio_register_pin
 285               	.LVL20:
  17:src/hbridge.c **** 
 286               		.loc 1 17 5 view .LVU55
  17:src/hbridge.c **** 
 287               		.loc 1 17 10 is_stmt 0 view .LVU56
 288 015a 88E8      		ldi r24,lo8(-120)
 289 015c 93E1      		ldi r25,lo8(19)
 290 015e 9093 9700 		sts 150+1,r25
 291 0162 8093 9600 		sts 150,r24
  19:src/hbridge.c **** 	TCNT0 = 0;
 292               		.loc 1 19 2 is_stmt 1 view .LVU57
  19:src/hbridge.c **** 	TCNT0 = 0;
 293               		.loc 1 19 8 is_stmt 0 view .LVU58
 294 0166 1092 9500 		sts 148+1,__zero_reg__
 295 016a 1092 9400 		sts 148,__zero_reg__
  20:src/hbridge.c **** 
 296               		.loc 1 20 2 is_stmt 1 view .LVU59
  20:src/hbridge.c **** 
 297               		.loc 1 20 8 is_stmt 0 view .LVU60
 298 016e 16BC      		out 0x26,__zero_reg__
  22:src/hbridge.c **** 	OCR3B = 0;
 299               		.loc 1 22 2 is_stmt 1 view .LVU61
  22:src/hbridge.c **** 	OCR3B = 0;
 300               		.loc 1 22 8 is_stmt 0 view .LVU62
 301 0170 1092 9900 		sts 152+1,__zero_reg__
 302 0174 1092 9800 		sts 152,__zero_reg__
  23:src/hbridge.c **** 	OCR3C = 0;
 303               		.loc 1 23 2 is_stmt 1 view .LVU63
  23:src/hbridge.c **** 	OCR3C = 0;
 304               		.loc 1 23 8 is_stmt 0 view .LVU64
 305 0178 1092 9B00 		sts 154+1,__zero_reg__
 306 017c 1092 9A00 		sts 154,__zero_reg__
  24:src/hbridge.c **** 
 307               		.loc 1 24 2 is_stmt 1 view .LVU65
  24:src/hbridge.c **** 
 308               		.loc 1 24 8 is_stmt 0 view .LVU66
 309 0180 1092 9D00 		sts 156+1,__zero_reg__
 310 0184 1092 9C00 		sts 156,__zero_reg__
  26:src/hbridge.c **** 	TCCR3B = (1<< CS31) | (1 << WGM32) | (1 << WGM33); 		// PRESKALER = 8
 311               		.loc 1 26 2 is_stmt 1 view .LVU67
  26:src/hbridge.c **** 	TCCR3B = (1<< CS31) | (1 << WGM32) | (1 << WGM33); 		// PRESKALER = 8
 312               		.loc 1 26 9 is_stmt 0 view .LVU68
 313 0188 8AEA      		ldi r24,lo8(-86)
 314 018a 8093 9000 		sts 144,r24
  27:src/hbridge.c **** 
 315               		.loc 1 27 2 is_stmt 1 view .LVU69
  27:src/hbridge.c **** 
 316               		.loc 1 27 9 is_stmt 0 view .LVU70
 317 018e 8AE1      		ldi r24,lo8(26)
 318 0190 8093 9100 		sts 145,r24
  29:src/hbridge.c **** 
 319               		.loc 1 29 5 is_stmt 1 view .LVU71
  29:src/hbridge.c **** 
 320               		.loc 1 29 12 is_stmt 0 view .LVU72
 321 0194 84B5      		in r24,0x24
 322 0196 8966      		ori r24,lo8(105)
 323 0198 84BD      		out 0x24,r24
  31:src/hbridge.c ****     hbridge_move(0,0,2);
 324               		.loc 1 31 5 is_stmt 1 view .LVU73
 325 019a 41E0      		ldi r20,lo8(1)
 326 019c 70E0      		ldi r23,0
 327 019e 60E0      		ldi r22,0
 328 01a0 90E0      		ldi r25,0
 329 01a2 80E0      		ldi r24,0
 330 01a4 0E94 0000 		call hbridge_move
 331               	.LVL21:
  32:src/hbridge.c **** 
 332               		.loc 1 32 5 view .LVU74
 333 01a8 42E0      		ldi r20,lo8(2)
 334 01aa 70E0      		ldi r23,0
 335 01ac 60E0      		ldi r22,0
 336 01ae 90E0      		ldi r25,0
 337 01b0 80E0      		ldi r24,0
 338 01b2 0E94 0000 		call hbridge_move
 339               	.LVL22:
  34:src/hbridge.c **** } // end of init_hbridge()
 340               		.loc 1 34 5 view .LVU75
  35:src/hbridge.c **** 
 341               		.loc 1 35 1 is_stmt 0 view .LVU76
 342 01b6 81E0      		ldi r24,lo8(1)
 343               	/* epilogue start */
 344 01b8 0895      		ret
 345               		.cfi_endproc
 346               	.LFE22:
 348               	.global	hbridge_break
 350               	hbridge_break:
 351               	.LVL23:
 352               	.LFB24:
  92:src/hbridge.c **** 
  93:src/hbridge.c **** /*
  94:src/hbridge.c ****  * Function:    void hbridge_break(uint8_t num)
  95:src/hbridge.c ****  * Description: break the `num` hbridge
  96:src/hbridge.c ****  */
  97:src/hbridge.c **** void hbridge_break(uint8_t num) {
 353               		.loc 1 97 33 is_stmt 1 view -0
 354               		.cfi_startproc
 355               	/* prologue: function */
 356               	/* frame size = 0 */
 357               	/* stack size = 0 */
 358               	.L__stack_usage = 0
  98:src/hbridge.c ****     hbridge_move(100, 100, num);
 359               		.loc 1 98 5 view .LVU78
 360 01ba 482F      		mov r20,r24
 361 01bc 64E6      		ldi r22,lo8(100)
 362 01be 70E0      		ldi r23,0
 363 01c0 84E6      		ldi r24,lo8(100)
 364 01c2 90E0      		ldi r25,0
 365               	.LVL24:
 366               		.loc 1 98 5 is_stmt 0 view .LVU79
 367 01c4 0C94 0000 		jmp hbridge_move
 368               	.LVL25:
 369               		.loc 1 98 5 view .LVU80
 370               		.cfi_endproc
 371               	.LFE24:
 373               	.global	hbridge_time
 375               	hbridge_time:
 376               	.LVL26:
 377               	.LFB25:
  99:src/hbridge.c **** } // end of hbridge_break()
 100:src/hbridge.c **** 
 101:src/hbridge.c **** /*
 102:src/hbridge.c ****  * Function:    void hbridge_break(uint8_t num)
 103:src/hbridge.c ****  * Description: break the `num` hbridge
 104:src/hbridge.c ****  */
 105:src/hbridge.c **** void hbridge_time(int num, int dir, int achieve, int time) {
 378               		.loc 1 105 60 is_stmt 1 view -0
 379               		.cfi_startproc
 380               		.loc 1 105 60 is_stmt 0 view .LVU82
 381 01c8 EF92      		push r14
 382               	.LCFI8:
 383               		.cfi_def_cfa_offset 3
 384               		.cfi_offset 14, -2
 385 01ca FF92      		push r15
 386               	.LCFI9:
 387               		.cfi_def_cfa_offset 4
 388               		.cfi_offset 15, -3
 389 01cc 0F93      		push r16
 390               	.LCFI10:
 391               		.cfi_def_cfa_offset 5
 392               		.cfi_offset 16, -4
 393 01ce 1F93      		push r17
 394               	.LCFI11:
 395               		.cfi_def_cfa_offset 6
 396               		.cfi_offset 17, -5
 397 01d0 CF93      		push r28
 398               	.LCFI12:
 399               		.cfi_def_cfa_offset 7
 400               		.cfi_offset 28, -6
 401 01d2 DF93      		push r29
 402               	.LCFI13:
 403               		.cfi_def_cfa_offset 8
 404               		.cfi_offset 29, -7
 405               	/* prologue: function */
 406               	/* frame size = 0 */
 407               	/* stack size = 6 */
 408               	.L__stack_usage = 6
 409 01d4 FC01      		movw r30,r24
 410 01d6 8B01      		movw r16,r22
 411 01d8 EA01      		movw r28,r20
 412 01da C901      		movw r24,r18
 413               	.LVL27:
 106:src/hbridge.c ****     
 107:src/hbridge.c ****     // calculate the difference from the current and achieve speed
 108:src/hbridge.c ****     int dif = 0;
 414               		.loc 1 108 5 is_stmt 1 view .LVU83
 109:src/hbridge.c **** 
 110:src/hbridge.c ****     // switch between 1 and 2 motor
 111:src/hbridge.c ****     switch(num) {
 415               		.loc 1 111 5 view .LVU84
 416 01dc E130      		cpi r30,1
 417 01de F105      		cpc r31,__zero_reg__
 418 01e0 01F0      		breq .L12
 419 01e2 3297      		sbiw r30,2
 420 01e4 01F4      		brne .+2
 421 01e6 00C0      		rjmp .L13
 422               	.LVL28:
 423               	.L11:
 424               	/* epilogue start */
 112:src/hbridge.c ****         case 1:
 113:src/hbridge.c ****             // CW direction
 114:src/hbridge.c ****             if(dir == CW) {
 115:src/hbridge.c **** 
 116:src/hbridge.c ****                 // one side is always OFF
 117:src/hbridge.c ****                 current_A_1 = 0;                                        
 118:src/hbridge.c **** 
 119:src/hbridge.c ****                 // calculate the difference
 120:src/hbridge.c ****                 dif = achieve - current_B_1;
 121:src/hbridge.c **** 
 122:src/hbridge.c ****                 // for loop depends on how long we want to increment
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 124:src/hbridge.c ****                     // current = current + (difference / (time / 100))
 125:src/hbridge.c ****                     // we always increment the speed by a portion of the time (linear)
 126:src/hbridge.c ****                     current_B_1 += dif/(time/100);
 127:src/hbridge.c ****                     
 128:src/hbridge.c ****                     // write to hbridge
 129:src/hbridge.c ****                     hbridge_move(current_A_1, current_B_1, num);
 130:src/hbridge.c ****                     delay(100);
 131:src/hbridge.c ****                 }
 132:src/hbridge.c ****             } 
 133:src/hbridge.c ****             // CCW direction
 134:src/hbridge.c ****             else if(dir == CCW) {
 135:src/hbridge.c **** 
 136:src/hbridge.c ****                 // one side is always OFF
 137:src/hbridge.c ****                 current_B_1 = 0;
 138:src/hbridge.c **** 
 139:src/hbridge.c ****                 // calculate the difference
 140:src/hbridge.c ****                 dif = achieve - current_A_1;
 141:src/hbridge.c **** 
 142:src/hbridge.c ****                 // for loop depends on how long we want to increment
 143:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 144:src/hbridge.c ****                     // current = current + (difference / (time / 100))
 145:src/hbridge.c ****                     current_A_1 += dif/(time/100);
 146:src/hbridge.c **** 
 147:src/hbridge.c ****                     // write to hbridge
 148:src/hbridge.c ****                     hbridge_move(current_A_1, current_B_1, num);
 149:src/hbridge.c ****                     delay(100);
 150:src/hbridge.c ****                 }
 151:src/hbridge.c ****             }
 152:src/hbridge.c ****             break;
 153:src/hbridge.c ****         case 2:
 154:src/hbridge.c ****             // CW direction
 155:src/hbridge.c ****             if(dir == CW) {
 156:src/hbridge.c **** 
 157:src/hbridge.c ****                 // one side is always OFF
 158:src/hbridge.c ****                 current_A_2 = 0;
 159:src/hbridge.c **** 
 160:src/hbridge.c ****                 // calculate the difference
 161:src/hbridge.c ****                 dif = achieve - current_B_2;
 162:src/hbridge.c **** 
 163:src/hbridge.c ****                 // for loop depends on how long we want to increment
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 165:src/hbridge.c ****                     // current = current + (difference / (time / 100))
 166:src/hbridge.c ****                     current_B_2 += dif/(time/100);
 167:src/hbridge.c **** 
 168:src/hbridge.c ****                     // write to hbridge
 169:src/hbridge.c ****                     hbridge_move(current_A_2, current_B_2, num);
 170:src/hbridge.c ****                     delay(100);
 171:src/hbridge.c ****                 }
 172:src/hbridge.c ****             }
 173:src/hbridge.c ****             // CCW direction
 174:src/hbridge.c ****             else if(dir == CCW) {
 175:src/hbridge.c **** 
 176:src/hbridge.c ****                 // one side is always OFF
 177:src/hbridge.c ****                 current_B_2 = 0;
 178:src/hbridge.c **** 
 179:src/hbridge.c ****                 // calculate the difference
 180:src/hbridge.c ****                 dif = achieve - current_A_2;
 181:src/hbridge.c **** 
 182:src/hbridge.c ****                 // for loop depends on how long we want to increment
 183:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 184:src/hbridge.c ****                     // current = current + (difference / (time / 100))
 185:src/hbridge.c ****                     current_A_2 += dif/(time/100);
 186:src/hbridge.c **** 
 187:src/hbridge.c ****                     // write to hbridge
 188:src/hbridge.c ****                     hbridge_move(current_A_2, current_B_2, num);
 189:src/hbridge.c ****                     delay(100);
 190:src/hbridge.c ****                 }
 191:src/hbridge.c ****             }
 192:src/hbridge.c ****             break;
 193:src/hbridge.c ****     }
 194:src/hbridge.c **** } // end of hbridge_time()...
 425               		.loc 1 194 1 is_stmt 0 view .LVU85
 426 01e8 DF91      		pop r29
 427 01ea CF91      		pop r28
 428 01ec 1F91      		pop r17
 429 01ee 0F91      		pop r16
 430 01f0 FF90      		pop r15
 431 01f2 EF90      		pop r14
 432 01f4 0895      		ret
 433               	.LVL29:
 434               	.L12:
 114:src/hbridge.c ****             if(dir == CW) {
 435               		.loc 1 114 13 is_stmt 1 view .LVU86
 114:src/hbridge.c ****             if(dir == CW) {
 436               		.loc 1 114 15 is_stmt 0 view .LVU87
 437 01f6 6130      		cpi r22,1
 438 01f8 7105      		cpc r23,__zero_reg__
 439 01fa 01F4      		brne .L15
 117:src/hbridge.c ****                 current_A_1 = 0;                                        
 440               		.loc 1 117 17 is_stmt 1 view .LVU88
 117:src/hbridge.c ****                 current_A_1 = 0;                                        
 441               		.loc 1 117 29 is_stmt 0 view .LVU89
 442 01fc 1092 0000 		sts current_A_1+1,__zero_reg__
 443 0200 1092 0000 		sts current_A_1,__zero_reg__
 120:src/hbridge.c ****                 dif = achieve - current_B_1;
 444               		.loc 1 120 17 is_stmt 1 view .LVU90
 120:src/hbridge.c ****                 dif = achieve - current_B_1;
 445               		.loc 1 120 21 is_stmt 0 view .LVU91
 446 0204 2091 0000 		lds r18,current_B_1
 447 0208 3091 0000 		lds r19,current_B_1+1
 448               	.LVL30:
 120:src/hbridge.c ****                 dif = achieve - current_B_1;
 449               		.loc 1 120 21 view .LVU92
 450 020c C21B      		sub r28,r18
 451 020e D30B      		sbc r29,r19
 452               	.LVL31:
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 453               		.loc 1 123 17 is_stmt 1 view .LVU93
 454               	.LBB2:
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 455               		.loc 1 123 21 view .LVU94
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 456               		.loc 1 123 38 is_stmt 0 view .LVU95
 457 0210 64E6      		ldi r22,lo8(100)
 458 0212 70E0      		ldi r23,0
 459 0214 0E94 0000 		call __divmodhi4
 460               	.LVL32:
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 461               		.loc 1 123 38 view .LVU96
 462 0218 7B01      		movw r14,r22
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 463               		.loc 1 123 25 view .LVU97
 464 021a 10E0      		ldi r17,0
 465 021c 00E0      		ldi r16,0
 466               	.LVL33:
 467               	.L16:
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 468               		.loc 1 123 17 discriminator 1 view .LVU98
 469 021e 0E15      		cp r16,r14
 470 0220 1F05      		cpc r17,r15
 471 0222 04F4      		brge .L11
 126:src/hbridge.c ****                     current_B_1 += dif/(time/100);
 472               		.loc 1 126 21 is_stmt 1 discriminator 3 view .LVU99
 126:src/hbridge.c ****                     current_B_1 += dif/(time/100);
 473               		.loc 1 126 39 is_stmt 0 discriminator 3 view .LVU100
 474 0224 CE01      		movw r24,r28
 475 0226 B701      		movw r22,r14
 476 0228 0E94 0000 		call __divmodhi4
 126:src/hbridge.c ****                     current_B_1 += dif/(time/100);
 477               		.loc 1 126 33 discriminator 3 view .LVU101
 478 022c 8091 0000 		lds r24,current_B_1
 479 0230 9091 0000 		lds r25,current_B_1+1
 480 0234 680F      		add r22,r24
 481 0236 791F      		adc r23,r25
 482 0238 7093 0000 		sts current_B_1+1,r23
 483 023c 6093 0000 		sts current_B_1,r22
 129:src/hbridge.c ****                     hbridge_move(current_A_1, current_B_1, num);
 484               		.loc 1 129 21 is_stmt 1 discriminator 3 view .LVU102
 485 0240 41E0      		ldi r20,lo8(1)
 486 0242 8091 0000 		lds r24,current_A_1
 487 0246 9091 0000 		lds r25,current_A_1+1
 488 024a 0E94 0000 		call hbridge_move
 489               	.LVL34:
 130:src/hbridge.c ****                     delay(100);
 490               		.loc 1 130 21 discriminator 3 view .LVU103
 491 024e 84E6      		ldi r24,lo8(100)
 492 0250 90E0      		ldi r25,0
 493 0252 0E94 0000 		call delay
 494               	.LVL35:
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 495               		.loc 1 123 44 is_stmt 0 discriminator 3 view .LVU104
 496 0256 0F5F      		subi r16,-1
 497 0258 1F4F      		sbci r17,-1
 498               	.LVL36:
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 499               		.loc 1 123 44 discriminator 3 view .LVU105
 500 025a 00C0      		rjmp .L16
 501               	.LVL37:
 502               	.L15:
 123:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 503               		.loc 1 123 44 discriminator 3 view .LVU106
 504               	.LBE2:
 134:src/hbridge.c ****             else if(dir == CCW) {
 505               		.loc 1 134 18 is_stmt 1 view .LVU107
 134:src/hbridge.c ****             else if(dir == CCW) {
 506               		.loc 1 134 20 is_stmt 0 view .LVU108
 507 025c 672B      		or r22,r23
 508 025e 01F4      		brne .L11
 137:src/hbridge.c ****                 current_B_1 = 0;
 509               		.loc 1 137 17 is_stmt 1 view .LVU109
 137:src/hbridge.c ****                 current_B_1 = 0;
 510               		.loc 1 137 29 is_stmt 0 view .LVU110
 511 0260 1092 0000 		sts current_B_1+1,__zero_reg__
 512 0264 1092 0000 		sts current_B_1,__zero_reg__
 140:src/hbridge.c ****                 dif = achieve - current_A_1;
 513               		.loc 1 140 17 is_stmt 1 view .LVU111
 140:src/hbridge.c ****                 dif = achieve - current_A_1;
 514               		.loc 1 140 21 is_stmt 0 view .LVU112
 515 0268 2091 0000 		lds r18,current_A_1
 516 026c 3091 0000 		lds r19,current_A_1+1
 517               	.LVL38:
 140:src/hbridge.c ****                 dif = achieve - current_A_1;
 518               		.loc 1 140 21 view .LVU113
 519 0270 C21B      		sub r28,r18
 520 0272 D30B      		sbc r29,r19
 521               	.LVL39:
 143:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 522               		.loc 1 143 17 is_stmt 1 view .LVU114
 523               	.LBB3:
 143:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 524               		.loc 1 143 21 view .LVU115
 143:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 525               		.loc 1 143 38 is_stmt 0 view .LVU116
 526 0274 64E6      		ldi r22,lo8(100)
 527 0276 70E0      		ldi r23,0
 528 0278 0E94 0000 		call __divmodhi4
 529               	.LVL40:
 143:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 530               		.loc 1 143 38 view .LVU117
 531 027c 7B01      		movw r14,r22
 532               	.LVL41:
 533               	.L19:
 143:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 534               		.loc 1 143 17 discriminator 1 view .LVU118
 535 027e 0E15      		cp r16,r14
 536 0280 1F05      		cpc r17,r15
 537 0282 04F0      		brlt .+2
 538 0284 00C0      		rjmp .L11
 145:src/hbridge.c ****                     current_A_1 += dif/(time/100);
 539               		.loc 1 145 21 is_stmt 1 discriminator 3 view .LVU119
 145:src/hbridge.c ****                     current_A_1 += dif/(time/100);
 540               		.loc 1 145 39 is_stmt 0 discriminator 3 view .LVU120
 541 0286 CE01      		movw r24,r28
 542 0288 B701      		movw r22,r14
 543 028a 0E94 0000 		call __divmodhi4
 145:src/hbridge.c ****                     current_A_1 += dif/(time/100);
 544               		.loc 1 145 33 discriminator 3 view .LVU121
 545 028e 8091 0000 		lds r24,current_A_1
 546 0292 9091 0000 		lds r25,current_A_1+1
 547 0296 860F      		add r24,r22
 548 0298 971F      		adc r25,r23
 549 029a 9093 0000 		sts current_A_1+1,r25
 550 029e 8093 0000 		sts current_A_1,r24
 148:src/hbridge.c ****                     hbridge_move(current_A_1, current_B_1, num);
 551               		.loc 1 148 21 is_stmt 1 discriminator 3 view .LVU122
 552 02a2 6091 0000 		lds r22,current_B_1
 553 02a6 7091 0000 		lds r23,current_B_1+1
 554 02aa 41E0      		ldi r20,lo8(1)
 555 02ac 0E94 0000 		call hbridge_move
 556               	.LVL42:
 149:src/hbridge.c ****                     delay(100);
 557               		.loc 1 149 21 discriminator 3 view .LVU123
 558 02b0 84E6      		ldi r24,lo8(100)
 559 02b2 90E0      		ldi r25,0
 560 02b4 0E94 0000 		call delay
 561               	.LVL43:
 143:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 562               		.loc 1 143 44 is_stmt 0 discriminator 3 view .LVU124
 563 02b8 0F5F      		subi r16,-1
 564 02ba 1F4F      		sbci r17,-1
 565               	.LVL44:
 143:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 566               		.loc 1 143 44 discriminator 3 view .LVU125
 567 02bc 00C0      		rjmp .L19
 568               	.LVL45:
 569               	.L13:
 143:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 570               		.loc 1 143 44 discriminator 3 view .LVU126
 571               	.LBE3:
 155:src/hbridge.c ****             if(dir == CW) {
 572               		.loc 1 155 13 is_stmt 1 view .LVU127
 155:src/hbridge.c ****             if(dir == CW) {
 573               		.loc 1 155 15 is_stmt 0 view .LVU128
 574 02be 6130      		cpi r22,1
 575 02c0 7105      		cpc r23,__zero_reg__
 576 02c2 01F4      		brne .L21
 158:src/hbridge.c ****                 current_A_2 = 0;
 577               		.loc 1 158 17 is_stmt 1 view .LVU129
 158:src/hbridge.c ****                 current_A_2 = 0;
 578               		.loc 1 158 29 is_stmt 0 view .LVU130
 579 02c4 1092 0000 		sts current_A_2+1,__zero_reg__
 580 02c8 1092 0000 		sts current_A_2,__zero_reg__
 161:src/hbridge.c ****                 dif = achieve - current_B_2;
 581               		.loc 1 161 17 is_stmt 1 view .LVU131
 161:src/hbridge.c ****                 dif = achieve - current_B_2;
 582               		.loc 1 161 21 is_stmt 0 view .LVU132
 583 02cc 2091 0000 		lds r18,current_B_2
 584 02d0 3091 0000 		lds r19,current_B_2+1
 585               	.LVL46:
 161:src/hbridge.c ****                 dif = achieve - current_B_2;
 586               		.loc 1 161 21 view .LVU133
 587 02d4 C21B      		sub r28,r18
 588 02d6 D30B      		sbc r29,r19
 589               	.LVL47:
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 590               		.loc 1 164 17 is_stmt 1 view .LVU134
 591               	.LBB4:
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 592               		.loc 1 164 21 view .LVU135
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 593               		.loc 1 164 38 is_stmt 0 view .LVU136
 594 02d8 64E6      		ldi r22,lo8(100)
 595 02da 70E0      		ldi r23,0
 596 02dc 0E94 0000 		call __divmodhi4
 597               	.LVL48:
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 598               		.loc 1 164 38 view .LVU137
 599 02e0 7B01      		movw r14,r22
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 600               		.loc 1 164 25 view .LVU138
 601 02e2 10E0      		ldi r17,0
 602 02e4 00E0      		ldi r16,0
 603               	.LVL49:
 604               	.L22:
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 605               		.loc 1 164 17 discriminator 1 view .LVU139
 606 02e6 0E15      		cp r16,r14
 607 02e8 1F05      		cpc r17,r15
 608 02ea 04F0      		brlt .+2
 609 02ec 00C0      		rjmp .L11
 166:src/hbridge.c ****                     current_B_2 += dif/(time/100);
 610               		.loc 1 166 21 is_stmt 1 discriminator 3 view .LVU140
 166:src/hbridge.c ****                     current_B_2 += dif/(time/100);
 611               		.loc 1 166 39 is_stmt 0 discriminator 3 view .LVU141
 612 02ee CE01      		movw r24,r28
 613 02f0 B701      		movw r22,r14
 614 02f2 0E94 0000 		call __divmodhi4
 166:src/hbridge.c ****                     current_B_2 += dif/(time/100);
 615               		.loc 1 166 33 discriminator 3 view .LVU142
 616 02f6 8091 0000 		lds r24,current_B_2
 617 02fa 9091 0000 		lds r25,current_B_2+1
 618 02fe 680F      		add r22,r24
 619 0300 791F      		adc r23,r25
 620 0302 7093 0000 		sts current_B_2+1,r23
 621 0306 6093 0000 		sts current_B_2,r22
 169:src/hbridge.c ****                     hbridge_move(current_A_2, current_B_2, num);
 622               		.loc 1 169 21 is_stmt 1 discriminator 3 view .LVU143
 623 030a 42E0      		ldi r20,lo8(2)
 624 030c 8091 0000 		lds r24,current_A_2
 625 0310 9091 0000 		lds r25,current_A_2+1
 626 0314 0E94 0000 		call hbridge_move
 627               	.LVL50:
 170:src/hbridge.c ****                     delay(100);
 628               		.loc 1 170 21 discriminator 3 view .LVU144
 629 0318 84E6      		ldi r24,lo8(100)
 630 031a 90E0      		ldi r25,0
 631 031c 0E94 0000 		call delay
 632               	.LVL51:
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 633               		.loc 1 164 44 is_stmt 0 discriminator 3 view .LVU145
 634 0320 0F5F      		subi r16,-1
 635 0322 1F4F      		sbci r17,-1
 636               	.LVL52:
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 637               		.loc 1 164 44 discriminator 3 view .LVU146
 638 0324 00C0      		rjmp .L22
 639               	.LVL53:
 640               	.L21:
 164:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 641               		.loc 1 164 44 discriminator 3 view .LVU147
 642               	.LBE4:
 174:src/hbridge.c ****             else if(dir == CCW) {
 643               		.loc 1 174 18 is_stmt 1 view .LVU148
 174:src/hbridge.c ****             else if(dir == CCW) {
 644               		.loc 1 174 20 is_stmt 0 view .LVU149
 645 0326 672B      		or r22,r23
 646 0328 01F0      		breq .+2
 647 032a 00C0      		rjmp .L11
 177:src/hbridge.c ****                 current_B_2 = 0;
 648               		.loc 1 177 17 is_stmt 1 view .LVU150
 177:src/hbridge.c ****                 current_B_2 = 0;
 649               		.loc 1 177 29 is_stmt 0 view .LVU151
 650 032c 1092 0000 		sts current_B_2+1,__zero_reg__
 651 0330 1092 0000 		sts current_B_2,__zero_reg__
 180:src/hbridge.c ****                 dif = achieve - current_A_2;
 652               		.loc 1 180 17 is_stmt 1 view .LVU152
 180:src/hbridge.c ****                 dif = achieve - current_A_2;
 653               		.loc 1 180 21 is_stmt 0 view .LVU153
 654 0334 2091 0000 		lds r18,current_A_2
 655 0338 3091 0000 		lds r19,current_A_2+1
 656               	.LVL54:
 180:src/hbridge.c ****                 dif = achieve - current_A_2;
 657               		.loc 1 180 21 view .LVU154
 658 033c C21B      		sub r28,r18
 659 033e D30B      		sbc r29,r19
 660               	.LVL55:
 183:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 661               		.loc 1 183 17 is_stmt 1 view .LVU155
 662               	.LBB5:
 183:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 663               		.loc 1 183 21 view .LVU156
 183:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 664               		.loc 1 183 38 is_stmt 0 view .LVU157
 665 0340 64E6      		ldi r22,lo8(100)
 666 0342 70E0      		ldi r23,0
 667 0344 0E94 0000 		call __divmodhi4
 668               	.LVL56:
 183:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 669               		.loc 1 183 38 view .LVU158
 670 0348 7B01      		movw r14,r22
 671               	.LVL57:
 672               	.L24:
 183:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 673               		.loc 1 183 17 discriminator 1 view .LVU159
 674 034a 0E15      		cp r16,r14
 675 034c 1F05      		cpc r17,r15
 676 034e 04F0      		brlt .+2
 677 0350 00C0      		rjmp .L11
 185:src/hbridge.c ****                     current_A_2 += dif/(time/100);
 678               		.loc 1 185 21 is_stmt 1 discriminator 3 view .LVU160
 185:src/hbridge.c ****                     current_A_2 += dif/(time/100);
 679               		.loc 1 185 39 is_stmt 0 discriminator 3 view .LVU161
 680 0352 CE01      		movw r24,r28
 681 0354 B701      		movw r22,r14
 682 0356 0E94 0000 		call __divmodhi4
 185:src/hbridge.c ****                     current_A_2 += dif/(time/100);
 683               		.loc 1 185 33 discriminator 3 view .LVU162
 684 035a 8091 0000 		lds r24,current_A_2
 685 035e 9091 0000 		lds r25,current_A_2+1
 686 0362 860F      		add r24,r22
 687 0364 971F      		adc r25,r23
 688 0366 9093 0000 		sts current_A_2+1,r25
 689 036a 8093 0000 		sts current_A_2,r24
 188:src/hbridge.c ****                     hbridge_move(current_A_2, current_B_2, num);
 690               		.loc 1 188 21 is_stmt 1 discriminator 3 view .LVU163
 691 036e 6091 0000 		lds r22,current_B_2
 692 0372 7091 0000 		lds r23,current_B_2+1
 693 0376 42E0      		ldi r20,lo8(2)
 694 0378 0E94 0000 		call hbridge_move
 695               	.LVL58:
 189:src/hbridge.c ****                     delay(100);
 696               		.loc 1 189 21 discriminator 3 view .LVU164
 697 037c 84E6      		ldi r24,lo8(100)
 698 037e 90E0      		ldi r25,0
 699 0380 0E94 0000 		call delay
 700               	.LVL59:
 183:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 701               		.loc 1 183 44 is_stmt 0 discriminator 3 view .LVU165
 702 0384 0F5F      		subi r16,-1
 703 0386 1F4F      		sbci r17,-1
 704               	.LVL60:
 183:src/hbridge.c ****                 for(int i=0; i < time/100;i++) {
 705               		.loc 1 183 44 discriminator 3 view .LVU166
 706 0388 00C0      		rjmp .L24
 707               	.LBE5:
 708               		.cfi_endproc
 709               	.LFE25:
 711               		.comm	current_B_2,2,1
 712               		.comm	current_A_2,2,1
 713               		.comm	current_B_1,2,1
 714               		.comm	current_A_1,2,1
 715               	.Letext0:
 716               		.file 2 "/usr/local/Cellar/avr-gcc/8.3.0/avr/include/stdint.h"
 717               		.file 3 "/usr/local/Cellar/avr-gcc/8.3.0/lib/avr-gcc/8/gcc/avr/8.3.0/include/stddef.h"
 718               		.file 4 "/usr/local/Cellar/avr-gcc/8.3.0/avr/include/stdio.h"
 719               		.file 5 "/usr/local/Cellar/avr-gcc/8.3.0/avr/include/stdlib.h"
 720               		.file 6 "src/system.h"
 721               		.file 7 "src/Uart.h"
 722               		.file 8 "src/gpio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hbridge.c
/var/tmp//ccugIgtN.s:2      *ABS*:000000000000003e __SP_H__
/var/tmp//ccugIgtN.s:3      *ABS*:000000000000003d __SP_L__
/var/tmp//ccugIgtN.s:4      *ABS*:000000000000003f __SREG__
/var/tmp//ccugIgtN.s:5      *ABS*:000000000000003b __RAMPZ__
/var/tmp//ccugIgtN.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/tmp//ccugIgtN.s:7      *ABS*:0000000000000001 __zero_reg__
/var/tmp//ccugIgtN.s:21     .text:0000000000000000 hbridge_move
                            *COM*:0000000000000002 current_A_2
                            *COM*:0000000000000002 current_B_2
                            *COM*:0000000000000002 current_A_1
                            *COM*:0000000000000002 current_B_1
/var/tmp//ccugIgtN.s:254    .text:0000000000000132 init_hbridge
/var/tmp//ccugIgtN.s:350    .text:00000000000001ba hbridge_break
/var/tmp//ccugIgtN.s:375    .text:00000000000001c8 hbridge_time

UNDEFINED SYMBOLS
debug_printf
debug_printf_num
__usmulhisi3
__divmodsi4
__divmodhi4
gpio_write_pin
gpio_register_pin
delay
__do_copy_data
__do_clear_bss
