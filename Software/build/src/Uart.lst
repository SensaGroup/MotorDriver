   1               		.file	"Uart.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	USART0_init
  13               	USART0_init:
  14               	.LVL0:
  15               	.LFB7:
  16               		.file 1 "src/Uart.c"
   1:src/Uart.c    **** #include <avr/io.h>
   2:src/Uart.c    **** #include <avr/interrupt.h>
   3:src/Uart.c    **** #include <stdint.h>
   4:src/Uart.c    **** #include <util/delay.h>
   5:src/Uart.c    **** 
   6:src/Uart.c    **** #include "Uart.h"
   7:src/Uart.c    **** 
   8:src/Uart.c    **** /*
   9:src/Uart.c    ****  *	Function: 		void USART0_init(uint32_t baud)
  10:src/Uart.c    ****  *  Description: 	init USART0 with a specific baudrate
  11:src/Uart.c    ****  */
  12:src/Uart.c    **** void USART0_init(uint32_t baud)
  13:src/Uart.c    **** {
  17               		.loc 1 13 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  14:src/Uart.c    **** 	uint32_t temp_baud = 0;
  23               		.loc 1 14 2 view .LVU1
  15:src/Uart.c    **** 
  16:src/Uart.c    **** 	temp_baud = (F_CPU / (8 * baud)) - 1;
  24               		.loc 1 16 2 view .LVU2
  25               		.loc 1 16 26 is_stmt 0 view .LVU3
  26 0000 9B01      		movw r18,r22
  27 0002 AC01      		movw r20,r24
  28 0004 83E0      		ldi r24,3
  29               		1:
  30 0006 220F      		lsl r18
  31 0008 331F      		rol r19
  32 000a 441F      		rol r20
  33 000c 551F      		rol r21
  34 000e 8A95      		dec r24
  35 0010 01F4      		brne 1b
  36               		.loc 1 16 21 view .LVU4
  37 0012 60E0      		ldi r22,0
  38 0014 74E2      		ldi r23,lo8(36)
  39 0016 84EF      		ldi r24,lo8(-12)
  40 0018 90E0      		ldi r25,0
  41               	.LVL1:
  42               		.loc 1 16 21 view .LVU5
  43 001a 0E94 0000 		call __udivmodsi4
  44               		.loc 1 16 12 view .LVU6
  45 001e BA01      		movw r22,r20
  46 0020 A901      		movw r20,r18
  47 0022 4150      		subi r20,1
  48 0024 5109      		sbc r21,__zero_reg__
  49 0026 6109      		sbc r22,__zero_reg__
  50 0028 7109      		sbc r23,__zero_reg__
  51               	.LVL2:
  17:src/Uart.c    **** 
  18:src/Uart.c    **** 	//Set baud rate
  19:src/Uart.c    **** 	UBRR0H = (unsigned char) (temp_baud >> 8);
  52               		.loc 1 19 2 is_stmt 1 view .LVU7
  53               		.loc 1 19 38 is_stmt 0 view .LVU8
  54 002a BB27      		clr r27
  55 002c A72F      		mov r26,r23
  56 002e 962F      		mov r25,r22
  57 0030 852F      		mov r24,r21
  58               		.loc 1 19 9 view .LVU9
  59 0032 8093 C500 		sts 197,r24
  20:src/Uart.c    **** 	UBRR0L = (unsigned char) temp_baud;
  60               		.loc 1 20 2 is_stmt 1 view .LVU10
  61               		.loc 1 20 9 is_stmt 0 view .LVU11
  62 0036 4093 C400 		sts 196,r20
  21:src/Uart.c    **** 
  22:src/Uart.c    **** 	UCSR0A |= (1 << U2X0);
  63               		.loc 1 22 2 is_stmt 1 view .LVU12
  64               		.loc 1 22 9 is_stmt 0 view .LVU13
  65 003a E0EC      		ldi r30,lo8(-64)
  66 003c F0E0      		ldi r31,0
  67 003e 8081      		ld r24,Z
  68 0040 8260      		ori r24,lo8(2)
  69 0042 8083      		st Z,r24
  23:src/Uart.c    **** 
  24:src/Uart.c    **** 	UCSR0B |= (1 << RXEN0);							// Disable RX
  70               		.loc 1 24 2 is_stmt 1 view .LVU14
  71               		.loc 1 24 9 is_stmt 0 view .LVU15
  72 0044 E1EC      		ldi r30,lo8(-63)
  73 0046 F0E0      		ldi r31,0
  74 0048 8081      		ld r24,Z
  75 004a 8061      		ori r24,lo8(16)
  76 004c 8083      		st Z,r24
  25:src/Uart.c    **** 
  26:src/Uart.c    **** 	DDRE |= (1 << PE1);								// Set TX as output
  77               		.loc 1 26 2 is_stmt 1 view .LVU16
  78               		.loc 1 26 7 is_stmt 0 view .LVU17
  79 004e 699A      		sbi 0xd,1
  27:src/Uart.c    **** 	DDRE &= ~(1 << PE0);							// Set RX as input
  80               		.loc 1 27 2 is_stmt 1 view .LVU18
  81               		.loc 1 27 7 is_stmt 0 view .LVU19
  82 0050 6898      		cbi 0xd,0
  28:src/Uart.c    **** 
  29:src/Uart.c    **** 	UCSR0B |= (1 << TXEN0);							//Enable TX
  83               		.loc 1 29 2 is_stmt 1 view .LVU20
  84               		.loc 1 29 9 is_stmt 0 view .LVU21
  85 0052 8081      		ld r24,Z
  86 0054 8860      		ori r24,lo8(8)
  87 0056 8083      		st Z,r24
  30:src/Uart.c    **** 	UCSR0B &= ~(1 << UCSZ02);						//Data size
  88               		.loc 1 30 2 is_stmt 1 view .LVU22
  89               		.loc 1 30 9 is_stmt 0 view .LVU23
  90 0058 8081      		ld r24,Z
  91 005a 8B7F      		andi r24,lo8(-5)
  92 005c 8083      		st Z,r24
  31:src/Uart.c    **** 
  32:src/Uart.c    **** 	// async, no parity, 1 stop bit, 8 bit data size
  33:src/Uart.c    **** 	UCSR0C &= ~(1 << 7);
  93               		.loc 1 33 2 is_stmt 1 view .LVU24
  94               		.loc 1 33 9 is_stmt 0 view .LVU25
  95 005e E2EC      		ldi r30,lo8(-62)
  96 0060 F0E0      		ldi r31,0
  97 0062 8081      		ld r24,Z
  98 0064 8F77      		andi r24,lo8(127)
  99 0066 8083      		st Z,r24
  34:src/Uart.c    **** 	UCSR0C &= ~(1 << UMSEL0);
 100               		.loc 1 34 2 is_stmt 1 view .LVU26
 101               		.loc 1 34 9 is_stmt 0 view .LVU27
 102 0068 8081      		ld r24,Z
 103 006a 8F7B      		andi r24,lo8(-65)
 104 006c 8083      		st Z,r24
  35:src/Uart.c    **** 	UCSR0C &= ~(1 << UPM01) ;
 105               		.loc 1 35 2 is_stmt 1 view .LVU28
 106               		.loc 1 35 9 is_stmt 0 view .LVU29
 107 006e 8081      		ld r24,Z
 108 0070 8F7D      		andi r24,lo8(-33)
 109 0072 8083      		st Z,r24
  36:src/Uart.c    **** 	UCSR0C &= ~(1 << UPM00);
 110               		.loc 1 36 2 is_stmt 1 view .LVU30
 111               		.loc 1 36 9 is_stmt 0 view .LVU31
 112 0074 8081      		ld r24,Z
 113 0076 8F7E      		andi r24,lo8(-17)
 114 0078 8083      		st Z,r24
  37:src/Uart.c    **** 	UCSR0C &= ~(1 << USBS0);
 115               		.loc 1 37 2 is_stmt 1 view .LVU32
 116               		.loc 1 37 9 is_stmt 0 view .LVU33
 117 007a 8081      		ld r24,Z
 118 007c 877F      		andi r24,lo8(-9)
 119 007e 8083      		st Z,r24
  38:src/Uart.c    **** 	UCSR0C &= ~(1 << USBS0);
 120               		.loc 1 38 2 is_stmt 1 view .LVU34
 121               		.loc 1 38 9 is_stmt 0 view .LVU35
 122 0080 8081      		ld r24,Z
 123 0082 877F      		andi r24,lo8(-9)
 124 0084 8083      		st Z,r24
  39:src/Uart.c    **** 	UCSR0C |= (1 << UCSZ01);
 125               		.loc 1 39 2 is_stmt 1 view .LVU36
 126               		.loc 1 39 9 is_stmt 0 view .LVU37
 127 0086 8081      		ld r24,Z
 128 0088 8460      		ori r24,lo8(4)
 129 008a 8083      		st Z,r24
  40:src/Uart.c    **** 	UCSR0C |= (1 << UCSZ00);
 130               		.loc 1 40 2 is_stmt 1 view .LVU38
 131               		.loc 1 40 9 is_stmt 0 view .LVU39
 132 008c 8081      		ld r24,Z
 133 008e 8260      		ori r24,lo8(2)
 134 0090 8083      		st Z,r24
 135               	/* epilogue start */
  41:src/Uart.c    **** 
  42:src/Uart.c    **** } // end of USART0_init()
 136               		.loc 1 42 1 view .LVU40
 137 0092 0895      		ret
 138               		.cfi_endproc
 139               	.LFE7:
 141               	.global	USART0_transmit
 143               	USART0_transmit:
 144               	.LFB8:
  43:src/Uart.c    **** 
  44:src/Uart.c    **** /*
  45:src/Uart.c    ****  *	Function: 		void USART0_transmit(unsigned char data)
  46:src/Uart.c    ****  *  Description: 	transmit unsigned char through USART0
  47:src/Uart.c    ****  */
  48:src/Uart.c    **** void USART0_transmit(unsigned char data)
  49:src/Uart.c    **** {
 145               		.loc 1 49 1 is_stmt 1 view -0
 146               		.cfi_startproc
 147               	/* prologue: function */
 148               	/* frame size = 0 */
 149               	/* stack size = 0 */
 150               	.L__stack_usage = 0
 151               	.LVL3:
 152               	.L3:
  50:src/Uart.c    **** 	while ( ! ( UCSR0A & (1<<UDRE0))); 				// Wait for empty transmit buffer
 153               		.loc 1 50 35 discriminator 1 view .LVU42
 154               		.loc 1 50 14 is_stmt 0 discriminator 1 view .LVU43
 155 0094 9091 C000 		lds r25,192
 156               		.loc 1 50 8 discriminator 1 view .LVU44
 157 0098 95FF      		sbrs r25,5
 158 009a 00C0      		rjmp .L3
  51:src/Uart.c    **** 
  52:src/Uart.c    **** 	UDR0 = data; 									// Put data into buffer, sends the data
 159               		.loc 1 52 2 is_stmt 1 view .LVU45
 160               		.loc 1 52 7 is_stmt 0 view .LVU46
 161 009c 8093 C600 		sts 198,r24
 162               	/* epilogue start */
  53:src/Uart.c    **** 
  54:src/Uart.c    **** } // end of USART0_transmit()
 163               		.loc 1 54 1 view .LVU47
 164 00a0 0895      		ret
 165               		.cfi_endproc
 166               	.LFE8:
 168               	.global	USART0_receive
 170               	USART0_receive:
 171               	.LFB9:
  55:src/Uart.c    **** 
  56:src/Uart.c    **** /*
  57:src/Uart.c    ****  *	Function: 		unsigned char USART0_receive(void)
  58:src/Uart.c    ****  *  Description: 	receive data through USART0
  59:src/Uart.c    ****  */
  60:src/Uart.c    **** unsigned char USART0_receive(void)
  61:src/Uart.c    **** {
 172               		.loc 1 61 1 is_stmt 1 view -0
 173               		.cfi_startproc
 174               	/* prologue: function */
 175               	/* frame size = 0 */
 176               	/* stack size = 0 */
 177               	.L__stack_usage = 0
 178               	.L7:
  62:src/Uart.c    **** 	while ( ! (UCSR0A & (1<<RXC0)));				// Wait for data to be received
 179               		.loc 1 62 33 discriminator 1 view .LVU49
 180               		.loc 1 62 13 is_stmt 0 discriminator 1 view .LVU50
 181 00a2 8091 C000 		lds r24,192
 182               		.loc 1 62 8 discriminator 1 view .LVU51
 183 00a6 87FF      		sbrs r24,7
 184 00a8 00C0      		rjmp .L7
  63:src/Uart.c    **** 
  64:src/Uart.c    **** 	return UDR0;									// return it
 185               		.loc 1 64 2 is_stmt 1 view .LVU52
 186               		.loc 1 64 9 is_stmt 0 view .LVU53
 187 00aa 8091 C600 		lds r24,198
 188               	/* epilogue start */
  65:src/Uart.c    **** } // end of USART0_receive()
 189               		.loc 1 65 1 view .LVU54
 190 00ae 0895      		ret
 191               		.cfi_endproc
 192               	.LFE9:
 194               	.global	USART0_string
 196               	USART0_string:
 197               	.LVL4:
 198               	.LFB10:
  66:src/Uart.c    **** 
  67:src/Uart.c    **** /*
  68:src/Uart.c    ****  *	Function: 		void USART0_string(char *s)
  69:src/Uart.c    ****  *  Description: 	transmit a string through USART0
  70:src/Uart.c    ****  */
  71:src/Uart.c    **** void USART0_string(char *s)
  72:src/Uart.c    **** {
 199               		.loc 1 72 1 is_stmt 1 view -0
 200               		.cfi_startproc
 201               		.loc 1 72 1 is_stmt 0 view .LVU56
 202 00b0 CF93      		push r28
 203               	.LCFI0:
 204               		.cfi_def_cfa_offset 3
 205               		.cfi_offset 28, -2
 206 00b2 DF93      		push r29
 207               	.LCFI1:
 208               		.cfi_def_cfa_offset 4
 209               		.cfi_offset 29, -3
 210               	/* prologue: function */
 211               	/* frame size = 0 */
 212               	/* stack size = 2 */
 213               	.L__stack_usage = 2
 214 00b4 EC01      		movw r28,r24
  73:src/Uart.c    ****    	while (*s != 0x00)
 215               		.loc 1 73 5 is_stmt 1 view .LVU57
 216               	.LVL5:
 217               	.L10:
 218               		.loc 1 73 12 is_stmt 0 view .LVU58
 219 00b6 8991      		ld r24,Y+
 220               	.LVL6:
 221               		.loc 1 73 11 view .LVU59
 222 00b8 8111      		cpse r24,__zero_reg__
 223 00ba 00C0      		rjmp .L11
 224               	/* epilogue start */
  74:src/Uart.c    ****    	{
  75:src/Uart.c    **** 		USART0_transmit(*s);
  76:src/Uart.c    ****       	s++;
  77:src/Uart.c    ****    	}
  78:src/Uart.c    **** } // end of USART0_string()
 225               		.loc 1 78 1 view .LVU60
 226 00bc DF91      		pop r29
 227 00be CF91      		pop r28
 228               	.LVL7:
 229               		.loc 1 78 1 view .LVU61
 230 00c0 0895      		ret
 231               	.LVL8:
 232               	.L11:
  75:src/Uart.c    ****       	s++;
 233               		.loc 1 75 3 is_stmt 1 view .LVU62
 234 00c2 0E94 0000 		call USART0_transmit
 235               	.LVL9:
  76:src/Uart.c    ****    	}
 236               		.loc 1 76 8 view .LVU63
  76:src/Uart.c    ****    	}
 237               		.loc 1 76 8 is_stmt 0 view .LVU64
 238 00c6 00C0      		rjmp .L10
 239               		.cfi_endproc
 240               	.LFE10:
 242               	.global	debug_printf
 244               	debug_printf:
 245               	.LVL10:
 246               	.LFB11:
  79:src/Uart.c    **** 
  80:src/Uart.c    **** /*
  81:src/Uart.c    ****  * 	Function: 		void debug_printf(char *s)
  82:src/Uart.c    ****  *  Description: 	print if DEBUG is defined
  83:src/Uart.c    ****  */
  84:src/Uart.c    **** void debug_printf(char *s) {
 247               		.loc 1 84 28 is_stmt 1 view -0
 248               		.cfi_startproc
 249               	/* prologue: function */
 250               	/* frame size = 0 */
 251               	/* stack size = 0 */
 252               	.L__stack_usage = 0
  85:src/Uart.c    **** 	#ifdef DEBUG
  86:src/Uart.c    **** 		USART0_string(*s);
  87:src/Uart.c    **** 	#endif
  88:src/Uart.c    **** } // end of debug_printf()
 253               		.loc 1 88 1 view .LVU66
 254               	/* epilogue start */
 255 00c8 0895      		ret
 256               		.cfi_endproc
 257               	.LFE11:
 259               	.global	debug_printf_num
 261               	debug_printf_num:
 262               	.LVL11:
 263               	.LFB12:
  89:src/Uart.c    **** 
  90:src/Uart.c    **** /*
  91:src/Uart.c    ****  * 	Function: 		void debug_printf_num(int num)
  92:src/Uart.c    ****  *  Description: 	print if DEBUG is defined
  93:src/Uart.c    ****  */
  94:src/Uart.c    **** void debug_printf_num(int num) {
 264               		.loc 1 94 32 view -0
 265               		.cfi_startproc
 266               	/* prologue: function */
 267               	/* frame size = 0 */
 268               	/* stack size = 0 */
 269               	.L__stack_usage = 0
  95:src/Uart.c    **** 	#ifdef DEBUG
  96:src/Uart.c    **** 		char converted[30];
  97:src/Uart.c    **** 		itoa(num, msg, 10);
  98:src/Uart.c    **** 		USART0_string(converted);
  99:src/Uart.c    **** 	#endif
 100:src/Uart.c    **** } // end of debug_printf()...
 270               		.loc 1 100 1 view .LVU68
 271               	/* epilogue start */
 272 00ca 0895      		ret
 273               		.cfi_endproc
 274               	.LFE12:
 276               	.Letext0:
 277               		.file 2 "/usr/local/Cellar/avr-gcc/8.3.0/avr/include/stdint.h"
 278               		.file 3 "/usr/local/Cellar/avr-gcc/8.3.0/avr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Uart.c
/var/tmp//ccdOlRXz.s:2      *ABS*:000000000000003e __SP_H__
/var/tmp//ccdOlRXz.s:3      *ABS*:000000000000003d __SP_L__
/var/tmp//ccdOlRXz.s:4      *ABS*:000000000000003f __SREG__
/var/tmp//ccdOlRXz.s:5      *ABS*:000000000000003b __RAMPZ__
/var/tmp//ccdOlRXz.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/tmp//ccdOlRXz.s:7      *ABS*:0000000000000001 __zero_reg__
/var/tmp//ccdOlRXz.s:13     .text:0000000000000000 USART0_init
/var/tmp//ccdOlRXz.s:143    .text:0000000000000094 USART0_transmit
/var/tmp//ccdOlRXz.s:170    .text:00000000000000a2 USART0_receive
/var/tmp//ccdOlRXz.s:196    .text:00000000000000b0 USART0_string
/var/tmp//ccdOlRXz.s:244    .text:00000000000000c8 debug_printf
/var/tmp//ccdOlRXz.s:261    .text:00000000000000ca debug_printf_num

UNDEFINED SYMBOLS
__udivmodsi4
